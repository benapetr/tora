Installing TOra
===============

Using a binary distribution
===========================

Check the release notes for various binary distributions available of this
release. All distributions require a working Oracle client installation. This
includes the statically linked Oracle binary for Linux. Oracle 8i is the only
supported client side version (At least Oracle 8.1.5), it might work partially
with earlier or later versions of Oracle but it is as of this version not
supported (Please try and send me patches).

Installing from source
======================

Before you try to compile TOra you will need the following prerequisites:

1. A unix system which supports Qt (Dooh).
2. Qt 2.2 or later. Requires an interface compiler of at least version 3.0.
3. Oracle 8i (At least Oracle 8.1.5), it might work partially with earlier
   versions of Oracle but is as of this version not supported (Please try and
   send me patches).
4. PERL 5.
5. GNU Make.

Thats about it, you should be set to start trying.

There is a configure script available that is made to try to mimic the
behaviour of autoconf generated configure scripts. There is no need to nag
about me starting to use autoconf (See at the end for explanation).

Just issue the command "configure" and it should probably point out if you
need to issue any commands specifying locations of Qt for instance.To find
out about the options type "configure --help". TOra will compile as an KDE
application if KDE is detected by the configure script.

This will generate a Makefile.setup file that you can check if you have
troubles. It will also copy the file Makefile.orig to Makefile so you
can start compiling.

After that you should be able to compile by just issuing "make" followed
by "make install". Observe that you probably need a GNU version of make
since TOra uses GNU extensions in the makefile.

On some linux installations (SuSE specifically) you can exprience the
problem of no oracle connection showing up. Passing the --with-static-oracle
to the configure script usually fixes this problem. The problem seems to be
with the dynamic linker or some other part of binary utilities.

If you experience problems with configure
-----------------------------------------

First send a mail to (TOra <tora-develop@lists.sourceforge.net>), the TOra
development mailing list and let me know what isn't working so I can fix it
in the next version.

Then copy the file Makefile.sample to Makefile and edit it to
fill out the correct values in it.



Support for Oracle Instant Client Build
=======================================
How to compile and install TOra using Oracle instant client.

Documented steps tested on Debian linux (testing). It should
work on other Linux distributions, but some (system) filenames
may differ.

1) Oracle instant client
Download client (http://www.oracle.com/technology/software/tech/oci/instantclient/index.html)
choose your platform (linux x86) and then you download "Instant Client Package - Basic",
"Instant Client Package - SQL*Plus", "Instant Client Package - SDK".
Because Debian does not use rpm packages, I used zip archives. After
unzip in apropriate directory (/usr/local/oracle/instantclient10_1)
you need this step to do (some as root, some as oracle user):
a) edit /etc/ld.so.conf (add /usr/local/oracle/instantclient10_1)
b) in /usr/local/oracle/instantclient10_1 create symbolic link:
   ln -s libclntsh.so.10.1 libclntsh.so
c) run ldconfig
d) provide tnsnames.ora
e) create dir bin (/usr/local/oracle/instantclient10_1/bin) and 
   symbolic link to sqlplus in bin: (ln -s ../sqlplus)

Apart Oracle's documentation, you do not need to set LD_LIBRARY_PATH.

Test connection using sqlplus. When succesfull, set environment
variables for users, who will compile tora and use tora:

ORACLE_HOME=/usr/local/oracle/instantclient10_1
TNS_ADMIN=<path_to_dir_where_is_tnsnames.ora>

2) Compiling TOra
Prerequisite: steps in 1)

only what you need is to modify configure.pl. Changes I did concerns
library path. All libraries (.so files) are in client home directory
(/usr/local/oracle/instantclient10_1), header files are in sdk/include.
My configure.pl is enclosed.

And next steps are usual:
make
make install (as root)

then enjoy!


SAP support
===========

To use SAP you need to compile SAP support for Qt which is available
from this address:

http://www.mn-logistik.de/unsupported/sapdb/


Support for PostgreSQL
======================

TOra supports PostgreSQL through QT's "Qsql" plugins.
This means your version of QT needs to have been
configured with the option "-plugin-sql-psql". If
that's been done correctly, then TOra will
automatically support PostgreSQL.


/Henrik "Mauritz" Johnson
Quest Software, Inc
