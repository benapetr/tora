Build notes for how TOra has been getting built with the Commercial 
release of Qt for Windows.

    1. Unpack the source in Linux (On a drive accessible from Windows).
    2. Run  configure  from  Linux.  This  will  run  all the uic and moc
       commands  that  are  needed  (It  is  vital  that you use the same
       version  of  Qt  on  Windows  and Linux in this step since the moc
       output can differ between Qt versions).
    3. Build it in Windows using Visual Studio where I simply include all
       the files needed (Everything except the old mysql provider and the
       Oracle preload file I think). Up until yesterday I have been using
       Visual  Studio  6.0,  but  I compiled TOra sourcecode using Visual
       Studio .Net 2003 too so that works great also.
       

Building with MINGW.

    At the moment this only works with QT3/Windows Free Edition port 
    (http://qtwin.sourceforge.net/).

    The makefiles were only tested in Mingw MSYS environment so it is 
    advised that you obtain and install full MINGW and MSYS packages
    from http://www.mingw.org. 
    
    This requires mingw compiled binaries of QT which could be obtained
    at http://qtwin.sourceforge.net/
    
    Please note that for TOra to work properly QT has to be compiled 
    with RTTI support in mingw. If the available QT binary does not 
    work then please compile  your own version of it following HOWTO 
    instructions on http://qtwin.sourceforge.net/ website and using 
    -rtti configuration parameter.
    
    1. Get and install (or build) QT3/Windows Free Edition from 
         http://qtwin.sourceforge.net/
       
    2. Get the QScintilla sources here
        http://www.riverbankcomputing.co.uk/qscintilla/index.php
    
    3. Obtain TOra sources
    
    4. Modify the qscintilla\build.cmd file in TOra directory with
       your environment settings (MINGW, QT and QScintilla paths)
    
    5. Build and install QScintilla by running qscintilla\build.cmd
    
    6. Copy Makefile.migw to src/Makefile in your TOra directory
    
    7. Edit src/Makefile and change path for QTDIR, OCI_DLL and OCI_HOME
       (and optionally for INSTALLDIR). Optionally edit the TARGET to 
       set the desirable executable. Also check the CFLAGS_GLOB and 
       LFLAGS_GLOB for the debug option (-g) depending on whether you 
       want debug executable or not. You may also need to create default
       version of config.h
    
    8. Run 'make' in MSYS environment from TOra src directory.
    
    9. Optionally run 'make install' - this will strip down the executable
       and copy the necessary files (not yet all of them) to the install 
       directory (INSTALLDIR)
       
       
Building Windows installer.

    1. Obtain and install NSIS installer software from 
        http://nsis.sourceforge.net
    
    2. Copy all the distribution files with desired directory structure
       to the src/windows/installer/files directory within your TOra directory 
       structure (or use it as INSTALLDIR when building TOra and use step 9 
       of above build instrucstions).
       
    3. Run NSIS compiler GUI and then drag and drop the tora.nsi file from
        src/windows/installer directory in TOra to the compiler GUI window and 
        wait till installer will finish the build.
    
    
Please report any bugs should you find them as this port is still in the
experimental stage.



Building with MSVC

	0. All related steps are done in the "Visual Studio Command Prompt"

	1. Downaload Qt4 source version for Windows - Trolltech doesn't provide
	   MSVC binaries at all.

	2. Install Oracle client - instant or standard one.

	3. Download and install Postgresql development packages. It's a part
	   of default installer - just check its component.
	   NOTE: Install it to the path *without* space in its name - Qt has
	         problems with compilation in the case of space.

	4. Download and install Mysql development packages. It's a part
	   of default installer - just check its component.
	   NOTE: Install it to the path *without* space in its name - Qt has
	         problems with compilation in the case of space.

	5. Update system environment paths in variables: INCLUDE and LIB to
	   fit Postgresql and Mysql includes and libraries.
	   Note: Mysql uses subdirectories in its lib directory.

	6. Compile Qt4 with MSVC. Don't forget to specify -qt-sql-mysql
	   -qt-sql-psql -qt-sql-odbc -plugin-sql-mysql -plugin-sql-psql
	   -plugin-sql-odbc parameters for configure script.

	7. Compile Tora - read README.CMAKE

