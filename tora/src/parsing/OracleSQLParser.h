/** \file
 *  This C header file was generated by $ANTLR version 3.3 Nov 30, 2010 12:50:56
 *
 *     -  From the grammar source file : OracleSQL.g
 *     -                            On : 2011-09-20 08:47:36
 *     -                for the parser : OracleSQLParserParser *
 * Editing it, at least manually, is not wise. 
 *
 * C language generator and runtime by Jim Idle, jimi|hereisanat|idle|dotgoeshere|ws.
 *
 *
 * The parser OracleSQLParser has the callable functions (rules) shown below,
 * which will invoke the code for the associated rule in the source grammar
 * assuming that the input stream is pointing to a token/text stream that could begin
 * this rule.
 * 
 * For instance if you call the first (topmost) rule in a parser grammar, you will
 * get the results of a full parse, but calling a rule half way through the grammar will
 * allow you to pass part of a full token stream to the parser, such as for syntax checking
 * in editors and so on.
 *
 * The parser entry points are called indirectly (by function pointer to function) via
 * a parser context typedef pOracleSQLParser, which is returned from a call to OracleSQLParserNew().
 *
 * The methods in pOracleSQLParser are  as follows:
 *
 *  - OracleSQLParser_start_rule_return      pOracleSQLParser->start_rule(pOracleSQLParser)
 *  - OracleSQLParser_delete_statement_return      pOracleSQLParser->delete_statement(pOracleSQLParser)
 *  - OracleSQLParser_merge_statement_return      pOracleSQLParser->merge_statement(pOracleSQLParser)
 *  - OracleSQLParser_merge_update_clause_return      pOracleSQLParser->merge_update_clause(pOracleSQLParser)
 *  - OracleSQLParser_merge_insert_clause_return      pOracleSQLParser->merge_insert_clause(pOracleSQLParser)
 *  - OracleSQLParser_insert_statement_return      pOracleSQLParser->insert_statement(pOracleSQLParser)
 *  - OracleSQLParser_single_table_insert_return      pOracleSQLParser->single_table_insert(pOracleSQLParser)
 *  - OracleSQLParser_insert_into_clause_return      pOracleSQLParser->insert_into_clause(pOracleSQLParser)
 *  - OracleSQLParser_values_clause_return      pOracleSQLParser->values_clause(pOracleSQLParser)
 *  - OracleSQLParser_returning_clause_return      pOracleSQLParser->returning_clause(pOracleSQLParser)
 *  - OracleSQLParser_multi_table_insert_return      pOracleSQLParser->multi_table_insert(pOracleSQLParser)
 *  - OracleSQLParser_conditional_insert_clause_return      pOracleSQLParser->conditional_insert_clause(pOracleSQLParser)
 *  - OracleSQLParser_dml_table_expression_clause_return      pOracleSQLParser->dml_table_expression_clause(pOracleSQLParser)
 *  - OracleSQLParser_error_logging_clause_return      pOracleSQLParser->error_logging_clause(pOracleSQLParser)
 *  - OracleSQLParser_data_item_return      pOracleSQLParser->data_item(pOracleSQLParser)
 *  - OracleSQLParser_update_statement_return      pOracleSQLParser->update_statement(pOracleSQLParser)
 *  - OracleSQLParser_update_set_clause_return      pOracleSQLParser->update_set_clause(pOracleSQLParser)
 *  - OracleSQLParser_update_set_clause_part1_return      pOracleSQLParser->update_set_clause_part1(pOracleSQLParser)
 *  - OracleSQLParser_update_set_clause_part2_return      pOracleSQLParser->update_set_clause_part2(pOracleSQLParser)
 *  - OracleSQLParser_select_statement_return      pOracleSQLParser->select_statement(pOracleSQLParser)
 *  - OracleSQLParser_subquery_factoring_clause_return      pOracleSQLParser->subquery_factoring_clause(pOracleSQLParser)
 *  - OracleSQLParser_subquery_factoring_clause_part_first_return      pOracleSQLParser->subquery_factoring_clause_part_first(pOracleSQLParser)
 *  - OracleSQLParser_subquery_factoring_clause_part_next_return      pOracleSQLParser->subquery_factoring_clause_part_next(pOracleSQLParser)
 *  - OracleSQLParser_search_clause_return      pOracleSQLParser->search_clause(pOracleSQLParser)
 *  - OracleSQLParser_cycle_clause_return      pOracleSQLParser->cycle_clause(pOracleSQLParser)
 *  - OracleSQLParser_select_list_return      pOracleSQLParser->select_list(pOracleSQLParser)
 *  - OracleSQLParser_displayed_column_part_first_return      pOracleSQLParser->displayed_column_part_first(pOracleSQLParser)
 *  - OracleSQLParser_displayed_column_part_next_return      pOracleSQLParser->displayed_column_part_next(pOracleSQLParser)
 *  - OracleSQLParser_displayed_column_return      pOracleSQLParser->displayed_column(pOracleSQLParser)
 *  - OracleSQLParser_sql_expression_return      pOracleSQLParser->sql_expression(pOracleSQLParser)
 *  - OracleSQLParser_expr_add_return      pOracleSQLParser->expr_add(pOracleSQLParser)
 *  - OracleSQLParser_expr_mul_return      pOracleSQLParser->expr_mul(pOracleSQLParser)
 *  - OracleSQLParser_expr_sign_return      pOracleSQLParser->expr_sign(pOracleSQLParser)
 *  - OracleSQLParser_expr_expr_return      pOracleSQLParser->expr_expr(pOracleSQLParser)
 *  - OracleSQLParser_expr_paren_return      pOracleSQLParser->expr_paren(pOracleSQLParser)
 *  - OracleSQLParser_nested_expression_return      pOracleSQLParser->nested_expression(pOracleSQLParser)
 *  - OracleSQLParser_function_expression_return      pOracleSQLParser->function_expression(pOracleSQLParser)
 *  - OracleSQLParser_call_parameters_return      pOracleSQLParser->call_parameters(pOracleSQLParser)
 *  - OracleSQLParser_call_parameter_return      pOracleSQLParser->call_parameter(pOracleSQLParser)
 *  - OracleSQLParser_parameter_name_return      pOracleSQLParser->parameter_name(pOracleSQLParser)
 *  - OracleSQLParser_special_function_return      pOracleSQLParser->special_function(pOracleSQLParser)
 *  - OracleSQLParser_case_expression_return      pOracleSQLParser->case_expression(pOracleSQLParser)
 *  - OracleSQLParser_cursor_expression_return      pOracleSQLParser->cursor_expression(pOracleSQLParser)
 *  - OracleSQLParser_simple_case_expression_return      pOracleSQLParser->simple_case_expression(pOracleSQLParser)
 *  - OracleSQLParser_searched_case_expression_return      pOracleSQLParser->searched_case_expression(pOracleSQLParser)
 *  - OracleSQLParser_else_case_expression_return      pOracleSQLParser->else_case_expression(pOracleSQLParser)
 *  - OracleSQLParser_object_access_expression_return      pOracleSQLParser->object_access_expression(pOracleSQLParser)
 *  - OracleSQLParser_simple_expression_return      pOracleSQLParser->simple_expression(pOracleSQLParser)
 *  - OracleSQLParser_query_block_return      pOracleSQLParser->query_block(pOracleSQLParser)
 *  - OracleSQLParser_subquery_return      pOracleSQLParser->subquery(pOracleSQLParser)
 *  - OracleSQLParser_timestamp_expression_return      pOracleSQLParser->timestamp_expression(pOracleSQLParser)
 *  - OracleSQLParser_interval_x_to_y_return      pOracleSQLParser->interval_x_to_y(pOracleSQLParser)
 *  - OracleSQLParser_precision_return      pOracleSQLParser->precision(pOracleSQLParser)
 *  - OracleSQLParser_extract_datetime_expression_return      pOracleSQLParser->extract_datetime_expression(pOracleSQLParser)
 *  - OracleSQLParser_datetime_expression_return      pOracleSQLParser->datetime_expression(pOracleSQLParser)
 *  - OracleSQLParser_interval_expression_return      pOracleSQLParser->interval_expression(pOracleSQLParser)
 *  - OracleSQLParser_special_expression_return      pOracleSQLParser->special_expression(pOracleSQLParser)
 *  - OracleSQLParser_cluster_set_clause_return      pOracleSQLParser->cluster_set_clause(pOracleSQLParser)
 *  - OracleSQLParser_cast_expression_return      pOracleSQLParser->cast_expression(pOracleSQLParser)
 *  - OracleSQLParser_datatype_name_return      pOracleSQLParser->datatype_name(pOracleSQLParser)
 *  - OracleSQLParser_boolean_literal_return      pOracleSQLParser->boolean_literal(pOracleSQLParser)
 *  - OracleSQLParser_t_alias_return      pOracleSQLParser->t_alias(pOracleSQLParser)
 *  - OracleSQLParser_c_alias_return      pOracleSQLParser->c_alias(pOracleSQLParser)
 *  - OracleSQLParser_column_spec_return      pOracleSQLParser->column_spec(pOracleSQLParser)
 *  - OracleSQLParser_pseudo_column_return      pOracleSQLParser->pseudo_column(pOracleSQLParser)
 *  - OracleSQLParser_function_name_return      pOracleSQLParser->function_name(pOracleSQLParser)
 *  - OracleSQLParser_function_spec_return      pOracleSQLParser->function_spec(pOracleSQLParser)
 *  - OracleSQLParser_identifier_return      pOracleSQLParser->identifier(pOracleSQLParser)
 *  - OracleSQLParser_bind_variable_return      pOracleSQLParser->bind_variable(pOracleSQLParser)
 *  - OracleSQLParser_sql_identifier_return      pOracleSQLParser->sql_identifier(pOracleSQLParser)
 *  - OracleSQLParser_table_reference_list_return      pOracleSQLParser->table_reference_list(pOracleSQLParser)
 *  - OracleSQLParser_table_reference_return      pOracleSQLParser->table_reference(pOracleSQLParser)
 *  - OracleSQLParser_query_table_expression_return      pOracleSQLParser->query_table_expression(pOracleSQLParser)
 *  - OracleSQLParser_flashback_query_clause_return      pOracleSQLParser->flashback_query_clause(pOracleSQLParser)
 *  - OracleSQLParser_sample_clause_return      pOracleSQLParser->sample_clause(pOracleSQLParser)
 *  - OracleSQLParser_partition_extension_clause_return      pOracleSQLParser->partition_extension_clause(pOracleSQLParser)
 *  - OracleSQLParser_subquery_restricrion_clause_return      pOracleSQLParser->subquery_restricrion_clause(pOracleSQLParser)
 *  - OracleSQLParser_table_collection_clause_return      pOracleSQLParser->table_collection_clause(pOracleSQLParser)
 *  - OracleSQLParser_join_clause_return      pOracleSQLParser->join_clause(pOracleSQLParser)
 *  - OracleSQLParser_inner_cross_join_clause_return      pOracleSQLParser->inner_cross_join_clause(pOracleSQLParser)
 *  - OracleSQLParser_outer_join_clause_return      pOracleSQLParser->outer_join_clause(pOracleSQLParser)
 *  - OracleSQLParser_query_partition_clause_return      pOracleSQLParser->query_partition_clause(pOracleSQLParser)
 *  - OracleSQLParser_outer_join_type_return      pOracleSQLParser->outer_join_type(pOracleSQLParser)
 *  - OracleSQLParser_joining_clause_return      pOracleSQLParser->joining_clause(pOracleSQLParser)
 *  - OracleSQLParser_sample_percent_return      pOracleSQLParser->sample_percent(pOracleSQLParser)
 *  - OracleSQLParser_seed_value_return      pOracleSQLParser->seed_value(pOracleSQLParser)
 *  - OracleSQLParser_outer_join_sign_return      pOracleSQLParser->outer_join_sign(pOracleSQLParser)
 *  - OracleSQLParser_table_name_long_return      pOracleSQLParser->table_name_long(pOracleSQLParser)
 *  - OracleSQLParser_table_name_return      pOracleSQLParser->table_name(pOracleSQLParser)
 *  - OracleSQLParser_schema_name_return      pOracleSQLParser->schema_name(pOracleSQLParser)
 *  - OracleSQLParser_package_name_return      pOracleSQLParser->package_name(pOracleSQLParser)
 *  - OracleSQLParser_dblink_name_return      pOracleSQLParser->dblink_name(pOracleSQLParser)
 *  - OracleSQLParser_column_specs_return      pOracleSQLParser->column_specs(pOracleSQLParser)
 *  - OracleSQLParser_partition_return      pOracleSQLParser->partition(pOracleSQLParser)
 *  - OracleSQLParser_partition_key_value_return      pOracleSQLParser->partition_key_value(pOracleSQLParser)
 *  - OracleSQLParser_subpartition_key_value_return      pOracleSQLParser->subpartition_key_value(pOracleSQLParser)
 *  - OracleSQLParser_constraint_return      pOracleSQLParser->constraint(pOracleSQLParser)
 *  - OracleSQLParser_collection_expression_return      pOracleSQLParser->collection_expression(pOracleSQLParser)
 *  - OracleSQLParser_where_clause_return      pOracleSQLParser->where_clause(pOracleSQLParser)
 *  - OracleSQLParser_hierarchical_query_clause_return      pOracleSQLParser->hierarchical_query_clause(pOracleSQLParser)
 *  - OracleSQLParser_group_by_clause_return      pOracleSQLParser->group_by_clause(pOracleSQLParser)
 *  - OracleSQLParser_group_by_exprs_return      pOracleSQLParser->group_by_exprs(pOracleSQLParser)
 *  - OracleSQLParser_group_by_expr_return      pOracleSQLParser->group_by_expr(pOracleSQLParser)
 *  - OracleSQLParser_rollup_cube_clause_return      pOracleSQLParser->rollup_cube_clause(pOracleSQLParser)
 *  - OracleSQLParser_grouping_sets_clause_return      pOracleSQLParser->grouping_sets_clause(pOracleSQLParser)
 *  - OracleSQLParser_grouping_sets_exprs_return      pOracleSQLParser->grouping_sets_exprs(pOracleSQLParser)
 *  - OracleSQLParser_grouping_sets_expr_return      pOracleSQLParser->grouping_sets_expr(pOracleSQLParser)
 *  - OracleSQLParser_sql_condition_return      pOracleSQLParser->sql_condition(pOracleSQLParser)
 *  - OracleSQLParser_condition_or_return      pOracleSQLParser->condition_or(pOracleSQLParser)
 *  - OracleSQLParser_condition_and_return      pOracleSQLParser->condition_and(pOracleSQLParser)
 *  - OracleSQLParser_condition_not_return      pOracleSQLParser->condition_not(pOracleSQLParser)
 *  - OracleSQLParser_condition_expr_return      pOracleSQLParser->condition_expr(pOracleSQLParser)
 *  - OracleSQLParser_condition_exists_return      pOracleSQLParser->condition_exists(pOracleSQLParser)
 *  - OracleSQLParser_condition_is_return      pOracleSQLParser->condition_is(pOracleSQLParser)
 *  - OracleSQLParser_condition_comparison_return      pOracleSQLParser->condition_comparison(pOracleSQLParser)
 *  - OracleSQLParser_condition_group_comparison_return      pOracleSQLParser->condition_group_comparison(pOracleSQLParser)
 *  - OracleSQLParser_condition_in_return      pOracleSQLParser->condition_in(pOracleSQLParser)
 *  - OracleSQLParser_condition_is_a_set_return      pOracleSQLParser->condition_is_a_set(pOracleSQLParser)
 *  - OracleSQLParser_condition_is_any_return      pOracleSQLParser->condition_is_any(pOracleSQLParser)
 *  - OracleSQLParser_condition_is_empty_return      pOracleSQLParser->condition_is_empty(pOracleSQLParser)
 *  - OracleSQLParser_condition_is_of_type_return      pOracleSQLParser->condition_is_of_type(pOracleSQLParser)
 *  - OracleSQLParser_condition_is_present_return      pOracleSQLParser->condition_is_present(pOracleSQLParser)
 *  - OracleSQLParser_condition_like_return      pOracleSQLParser->condition_like(pOracleSQLParser)
 *  - OracleSQLParser_condition_memeber_return      pOracleSQLParser->condition_memeber(pOracleSQLParser)
 *  - OracleSQLParser_condition_between_return      pOracleSQLParser->condition_between(pOracleSQLParser)
 *  - OracleSQLParser_condition_regexp_like_return      pOracleSQLParser->condition_regexp_like(pOracleSQLParser)
 *  - OracleSQLParser_condition_submultiset_return      pOracleSQLParser->condition_submultiset(pOracleSQLParser)
 *  - OracleSQLParser_condition_equals_path_return      pOracleSQLParser->condition_equals_path(pOracleSQLParser)
 *  - OracleSQLParser_condition_under_path_return      pOracleSQLParser->condition_under_path(pOracleSQLParser)
 *  - OracleSQLParser_levels_return      pOracleSQLParser->levels(pOracleSQLParser)
 *  - OracleSQLParser_correlation_integer_return      pOracleSQLParser->correlation_integer(pOracleSQLParser)
 *  - OracleSQLParser_path_string_return      pOracleSQLParser->path_string(pOracleSQLParser)
 *  - OracleSQLParser_type_names_return      pOracleSQLParser->type_names(pOracleSQLParser)
 *  - OracleSQLParser_integer_return      pOracleSQLParser->integer(pOracleSQLParser)
 *  - OracleSQLParser_column_name_return      pOracleSQLParser->column_name(pOracleSQLParser)
 *  - OracleSQLParser_nested_table_return      pOracleSQLParser->nested_table(pOracleSQLParser)
 *  - OracleSQLParser_nested_table_column_name_return      pOracleSQLParser->nested_table_column_name(pOracleSQLParser)
 *  - OracleSQLParser_sql_expressions_return      pOracleSQLParser->sql_expressions(pOracleSQLParser)
 *  - OracleSQLParser_grouping_sets_expression_list_return      pOracleSQLParser->grouping_sets_expression_list(pOracleSQLParser)
 *  - OracleSQLParser_grouping_expression_list_return      pOracleSQLParser->grouping_expression_list(pOracleSQLParser)
 *  - OracleSQLParser_expression_list_return      pOracleSQLParser->expression_list(pOracleSQLParser)
 *  - OracleSQLParser_cell_reference_return      pOracleSQLParser->cell_reference(pOracleSQLParser)
 *  - OracleSQLParser_condition_paren_return      pOracleSQLParser->condition_paren(pOracleSQLParser)
 *  - OracleSQLParser_model_clause_return      pOracleSQLParser->model_clause(pOracleSQLParser)
 *  - OracleSQLParser_cell_reference_options_return      pOracleSQLParser->cell_reference_options(pOracleSQLParser)
 *  - OracleSQLParser_return_rows_clause_return      pOracleSQLParser->return_rows_clause(pOracleSQLParser)
 *  - OracleSQLParser_reference_model_return      pOracleSQLParser->reference_model(pOracleSQLParser)
 *  - OracleSQLParser_reference_model_name_return      pOracleSQLParser->reference_model_name(pOracleSQLParser)
 *  - OracleSQLParser_main_model_return      pOracleSQLParser->main_model(pOracleSQLParser)
 *  - OracleSQLParser_main_model_name_return      pOracleSQLParser->main_model_name(pOracleSQLParser)
 *  - OracleSQLParser_model_column_clauses_return      pOracleSQLParser->model_column_clauses(pOracleSQLParser)
 *  - OracleSQLParser_model_columns_return      pOracleSQLParser->model_columns(pOracleSQLParser)
 *  - OracleSQLParser_model_column_return      pOracleSQLParser->model_column(pOracleSQLParser)
 *  - OracleSQLParser_model_rules_clause_return      pOracleSQLParser->model_rules_clause(pOracleSQLParser)
 *  - OracleSQLParser_model_rules_exprs_return      pOracleSQLParser->model_rules_exprs(pOracleSQLParser)
 *  - OracleSQLParser_model_rules_expr_return      pOracleSQLParser->model_rules_expr(pOracleSQLParser)
 *  - OracleSQLParser_cell_assignment_return      pOracleSQLParser->cell_assignment(pOracleSQLParser)
 *  - OracleSQLParser_cell_assignment_exprs_return      pOracleSQLParser->cell_assignment_exprs(pOracleSQLParser)
 *  - OracleSQLParser_cell_assignment_expr_return      pOracleSQLParser->cell_assignment_expr(pOracleSQLParser)
 *  - OracleSQLParser_measure_column_return      pOracleSQLParser->measure_column(pOracleSQLParser)
 *  - OracleSQLParser_single_column_for_loop_return      pOracleSQLParser->single_column_for_loop(pOracleSQLParser)
 *  - OracleSQLParser_pattern_return      pOracleSQLParser->pattern(pOracleSQLParser)
 *  - OracleSQLParser_literal_return      pOracleSQLParser->literal(pOracleSQLParser)
 *  - OracleSQLParser_literals_return      pOracleSQLParser->literals(pOracleSQLParser)
 *  - OracleSQLParser_multi_column_for_loop_return      pOracleSQLParser->multi_column_for_loop(pOracleSQLParser)
 *  - OracleSQLParser_bracket_literals_return      pOracleSQLParser->bracket_literals(pOracleSQLParser)
 *  - OracleSQLParser_bracket_literals_list_return      pOracleSQLParser->bracket_literals_list(pOracleSQLParser)
 *  - OracleSQLParser_union_clause_return      pOracleSQLParser->union_clause(pOracleSQLParser)
 *  - OracleSQLParser_order_by_clause_return      pOracleSQLParser->order_by_clause(pOracleSQLParser)
 *  - OracleSQLParser_order_by_clause_part_first_return      pOracleSQLParser->order_by_clause_part_first(pOracleSQLParser)
 *  - OracleSQLParser_order_by_clause_part_next_return      pOracleSQLParser->order_by_clause_part_next(pOracleSQLParser)
 *  - OracleSQLParser_analytic_function_name_return      pOracleSQLParser->analytic_function_name(pOracleSQLParser)
 *  - OracleSQLParser_analytic_function_call_return      pOracleSQLParser->analytic_function_call(pOracleSQLParser)
 *  - OracleSQLParser_analytic_function_return      pOracleSQLParser->analytic_function(pOracleSQLParser)
 *  - OracleSQLParser_count_function_return      pOracleSQLParser->count_function(pOracleSQLParser)
 *  - OracleSQLParser_analytic_clause_return      pOracleSQLParser->analytic_clause(pOracleSQLParser)
 *  - OracleSQLParser_windowing_clause_part_return      pOracleSQLParser->windowing_clause_part(pOracleSQLParser)
 *  - OracleSQLParser_windowing_clause_return      pOracleSQLParser->windowing_clause(pOracleSQLParser)
 *  - OracleSQLParser_aggregate_function_name_return      pOracleSQLParser->aggregate_function_name(pOracleSQLParser)
 *  - OracleSQLParser_aggregate_function_return      pOracleSQLParser->aggregate_function(pOracleSQLParser)
 *  - OracleSQLParser_percent_rank_aggregate_return      pOracleSQLParser->percent_rank_aggregate(pOracleSQLParser)
 *  - OracleSQLParser_dense_rank_aggregate_return      pOracleSQLParser->dense_rank_aggregate(pOracleSQLParser)
 *  - OracleSQLParser_percent_rank_analytic_return      pOracleSQLParser->percent_rank_analytic(pOracleSQLParser)
 *  - OracleSQLParser_percent_cont_disc_analytic_return      pOracleSQLParser->percent_cont_disc_analytic(pOracleSQLParser)
 *  - OracleSQLParser_dense_rank_analytic_return      pOracleSQLParser->dense_rank_analytic(pOracleSQLParser)
 *  - OracleSQLParser_first_last_return      pOracleSQLParser->first_last(pOracleSQLParser)
 *  - OracleSQLParser_listagg_return      pOracleSQLParser->listagg(pOracleSQLParser)
 *  - OracleSQLParser_for_update_clause_return      pOracleSQLParser->for_update_clause(pOracleSQLParser)
 *  - OracleSQLParser_for_update_clause_part_first_return      pOracleSQLParser->for_update_clause_part_first(pOracleSQLParser)
 *  - OracleSQLParser_for_update_clause_part_next_return      pOracleSQLParser->for_update_clause_part_next(pOracleSQLParser)
 *  - OracleSQLParser_pivot_clause_return      pOracleSQLParser->pivot_clause(pOracleSQLParser)
 *  - OracleSQLParser_pivot_for_clause_return      pOracleSQLParser->pivot_for_clause(pOracleSQLParser)
 *  - OracleSQLParser_pivot_in_clause_return      pOracleSQLParser->pivot_in_clause(pOracleSQLParser)
 *  - OracleSQLParser_unpivot_clause_return      pOracleSQLParser->unpivot_clause(pOracleSQLParser)
 *  - OracleSQLParser_unpivot_in_clause_return      pOracleSQLParser->unpivot_in_clause(pOracleSQLParser)
 *  - OracleSQLParser_constant_return      pOracleSQLParser->constant(pOracleSQLParser)
 *  - OracleSQLParser_r_access_return      pOracleSQLParser->r_access(pOracleSQLParser)
 *  - OracleSQLParser_r_add_return      pOracleSQLParser->r_add(pOracleSQLParser)
 *  - OracleSQLParser_r_all_return      pOracleSQLParser->r_all(pOracleSQLParser)
 *  - OracleSQLParser_r_alter_return      pOracleSQLParser->r_alter(pOracleSQLParser)
 *  - OracleSQLParser_r_and_return      pOracleSQLParser->r_and(pOracleSQLParser)
 *  - OracleSQLParser_r_any_return      pOracleSQLParser->r_any(pOracleSQLParser)
 *  - OracleSQLParser_r_arraylen_return      pOracleSQLParser->r_arraylen(pOracleSQLParser)
 *  - OracleSQLParser_r_as_return      pOracleSQLParser->r_as(pOracleSQLParser)
 *  - OracleSQLParser_r_asc_return      pOracleSQLParser->r_asc(pOracleSQLParser)
 *  - OracleSQLParser_r_audit_return      pOracleSQLParser->r_audit(pOracleSQLParser)
 *  - OracleSQLParser_r_between_return      pOracleSQLParser->r_between(pOracleSQLParser)
 *  - OracleSQLParser_r_by_return      pOracleSQLParser->r_by(pOracleSQLParser)
 *  - OracleSQLParser_r_case_return      pOracleSQLParser->r_case(pOracleSQLParser)
 *  - OracleSQLParser_r_char_return      pOracleSQLParser->r_char(pOracleSQLParser)
 *  - OracleSQLParser_r_check_return      pOracleSQLParser->r_check(pOracleSQLParser)
 *  - OracleSQLParser_r_cluster_return      pOracleSQLParser->r_cluster(pOracleSQLParser)
 *  - OracleSQLParser_r_column_return      pOracleSQLParser->r_column(pOracleSQLParser)
 *  - OracleSQLParser_r_comment_return      pOracleSQLParser->r_comment(pOracleSQLParser)
 *  - OracleSQLParser_r_compress_return      pOracleSQLParser->r_compress(pOracleSQLParser)
 *  - OracleSQLParser_r_connect_return      pOracleSQLParser->r_connect(pOracleSQLParser)
 *  - OracleSQLParser_r_create_return      pOracleSQLParser->r_create(pOracleSQLParser)
 *  - OracleSQLParser_r_current_return      pOracleSQLParser->r_current(pOracleSQLParser)
 *  - OracleSQLParser_r_date_return      pOracleSQLParser->r_date(pOracleSQLParser)
 *  - OracleSQLParser_r_decimal_return      pOracleSQLParser->r_decimal(pOracleSQLParser)
 *  - OracleSQLParser_r_default_return      pOracleSQLParser->r_default(pOracleSQLParser)
 *  - OracleSQLParser_r_delete_return      pOracleSQLParser->r_delete(pOracleSQLParser)
 *  - OracleSQLParser_r_desc_return      pOracleSQLParser->r_desc(pOracleSQLParser)
 *  - OracleSQLParser_r_distinct_return      pOracleSQLParser->r_distinct(pOracleSQLParser)
 *  - OracleSQLParser_r_drop_return      pOracleSQLParser->r_drop(pOracleSQLParser)
 *  - OracleSQLParser_r_else_return      pOracleSQLParser->r_else(pOracleSQLParser)
 *  - OracleSQLParser_r_exclusive_return      pOracleSQLParser->r_exclusive(pOracleSQLParser)
 *  - OracleSQLParser_r_exists_return      pOracleSQLParser->r_exists(pOracleSQLParser)
 *  - OracleSQLParser_r_false_return      pOracleSQLParser->r_false(pOracleSQLParser)
 *  - OracleSQLParser_r_file_return      pOracleSQLParser->r_file(pOracleSQLParser)
 *  - OracleSQLParser_r_float_return      pOracleSQLParser->r_float(pOracleSQLParser)
 *  - OracleSQLParser_r_for_return      pOracleSQLParser->r_for(pOracleSQLParser)
 *  - OracleSQLParser_r_from_return      pOracleSQLParser->r_from(pOracleSQLParser)
 *  - OracleSQLParser_r_grant_return      pOracleSQLParser->r_grant(pOracleSQLParser)
 *  - OracleSQLParser_r_group_return      pOracleSQLParser->r_group(pOracleSQLParser)
 *  - OracleSQLParser_r_having_return      pOracleSQLParser->r_having(pOracleSQLParser)
 *  - OracleSQLParser_r_identified_return      pOracleSQLParser->r_identified(pOracleSQLParser)
 *  - OracleSQLParser_r_immediate_return      pOracleSQLParser->r_immediate(pOracleSQLParser)
 *  - OracleSQLParser_r_in_return      pOracleSQLParser->r_in(pOracleSQLParser)
 *  - OracleSQLParser_r_increment_return      pOracleSQLParser->r_increment(pOracleSQLParser)
 *  - OracleSQLParser_r_index_return      pOracleSQLParser->r_index(pOracleSQLParser)
 *  - OracleSQLParser_r_initial_return      pOracleSQLParser->r_initial(pOracleSQLParser)
 *  - OracleSQLParser_r_insert_return      pOracleSQLParser->r_insert(pOracleSQLParser)
 *  - OracleSQLParser_r_integer_return      pOracleSQLParser->r_integer(pOracleSQLParser)
 *  - OracleSQLParser_r_intersect_return      pOracleSQLParser->r_intersect(pOracleSQLParser)
 *  - OracleSQLParser_r_into_return      pOracleSQLParser->r_into(pOracleSQLParser)
 *  - OracleSQLParser_r_is_return      pOracleSQLParser->r_is(pOracleSQLParser)
 *  - OracleSQLParser_r_level_return      pOracleSQLParser->r_level(pOracleSQLParser)
 *  - OracleSQLParser_r_like_return      pOracleSQLParser->r_like(pOracleSQLParser)
 *  - OracleSQLParser_r_lock_return      pOracleSQLParser->r_lock(pOracleSQLParser)
 *  - OracleSQLParser_r_long_return      pOracleSQLParser->r_long(pOracleSQLParser)
 *  - OracleSQLParser_r_maxextents_return      pOracleSQLParser->r_maxextents(pOracleSQLParser)
 *  - OracleSQLParser_r_minus_return      pOracleSQLParser->r_minus(pOracleSQLParser)
 *  - OracleSQLParser_r_mode_return      pOracleSQLParser->r_mode(pOracleSQLParser)
 *  - OracleSQLParser_r_modify_return      pOracleSQLParser->r_modify(pOracleSQLParser)
 *  - OracleSQLParser_r_noaudit_return      pOracleSQLParser->r_noaudit(pOracleSQLParser)
 *  - OracleSQLParser_r_nocompress_return      pOracleSQLParser->r_nocompress(pOracleSQLParser)
 *  - OracleSQLParser_r_not_return      pOracleSQLParser->r_not(pOracleSQLParser)
 *  - OracleSQLParser_r_notfound_return      pOracleSQLParser->r_notfound(pOracleSQLParser)
 *  - OracleSQLParser_r_nowait_return      pOracleSQLParser->r_nowait(pOracleSQLParser)
 *  - OracleSQLParser_r_null_return      pOracleSQLParser->r_null(pOracleSQLParser)
 *  - OracleSQLParser_r_number_return      pOracleSQLParser->r_number(pOracleSQLParser)
 *  - OracleSQLParser_r_of_return      pOracleSQLParser->r_of(pOracleSQLParser)
 *  - OracleSQLParser_r_offline_return      pOracleSQLParser->r_offline(pOracleSQLParser)
 *  - OracleSQLParser_r_on_return      pOracleSQLParser->r_on(pOracleSQLParser)
 *  - OracleSQLParser_r_online_return      pOracleSQLParser->r_online(pOracleSQLParser)
 *  - OracleSQLParser_r_option_return      pOracleSQLParser->r_option(pOracleSQLParser)
 *  - OracleSQLParser_r_or_return      pOracleSQLParser->r_or(pOracleSQLParser)
 *  - OracleSQLParser_r_order_return      pOracleSQLParser->r_order(pOracleSQLParser)
 *  - OracleSQLParser_r_pctfree_return      pOracleSQLParser->r_pctfree(pOracleSQLParser)
 *  - OracleSQLParser_r_prior_return      pOracleSQLParser->r_prior(pOracleSQLParser)
 *  - OracleSQLParser_r_privileges_return      pOracleSQLParser->r_privileges(pOracleSQLParser)
 *  - OracleSQLParser_r_public_return      pOracleSQLParser->r_public(pOracleSQLParser)
 *  - OracleSQLParser_r_raw_return      pOracleSQLParser->r_raw(pOracleSQLParser)
 *  - OracleSQLParser_r_rename_return      pOracleSQLParser->r_rename(pOracleSQLParser)
 *  - OracleSQLParser_r_resource_return      pOracleSQLParser->r_resource(pOracleSQLParser)
 *  - OracleSQLParser_r_revoke_return      pOracleSQLParser->r_revoke(pOracleSQLParser)
 *  - OracleSQLParser_r_row_return      pOracleSQLParser->r_row(pOracleSQLParser)
 *  - OracleSQLParser_r_rowid_return      pOracleSQLParser->r_rowid(pOracleSQLParser)
 *  - OracleSQLParser_r_rowlabel_return      pOracleSQLParser->r_rowlabel(pOracleSQLParser)
 *  - OracleSQLParser_r_rownum_return      pOracleSQLParser->r_rownum(pOracleSQLParser)
 *  - OracleSQLParser_r_rows_return      pOracleSQLParser->r_rows(pOracleSQLParser)
 *  - OracleSQLParser_r_select_return      pOracleSQLParser->r_select(pOracleSQLParser)
 *  - OracleSQLParser_r_session_return      pOracleSQLParser->r_session(pOracleSQLParser)
 *  - OracleSQLParser_r_set_return      pOracleSQLParser->r_set(pOracleSQLParser)
 *  - OracleSQLParser_r_share_return      pOracleSQLParser->r_share(pOracleSQLParser)
 *  - OracleSQLParser_r_size_return      pOracleSQLParser->r_size(pOracleSQLParser)
 *  - OracleSQLParser_r_smallint_return      pOracleSQLParser->r_smallint(pOracleSQLParser)
 *  - OracleSQLParser_r_sqlbuf_return      pOracleSQLParser->r_sqlbuf(pOracleSQLParser)
 *  - OracleSQLParser_r_start_return      pOracleSQLParser->r_start(pOracleSQLParser)
 *  - OracleSQLParser_r_successful_return      pOracleSQLParser->r_successful(pOracleSQLParser)
 *  - OracleSQLParser_r_synonym_return      pOracleSQLParser->r_synonym(pOracleSQLParser)
 *  - OracleSQLParser_r_sysdate_return      pOracleSQLParser->r_sysdate(pOracleSQLParser)
 *  - OracleSQLParser_r_table_return      pOracleSQLParser->r_table(pOracleSQLParser)
 *  - OracleSQLParser_r_then_return      pOracleSQLParser->r_then(pOracleSQLParser)
 *  - OracleSQLParser_r_to_return      pOracleSQLParser->r_to(pOracleSQLParser)
 *  - OracleSQLParser_r_trigger_return      pOracleSQLParser->r_trigger(pOracleSQLParser)
 *  - OracleSQLParser_r_true_return      pOracleSQLParser->r_true(pOracleSQLParser)
 *  - OracleSQLParser_r_uid_return      pOracleSQLParser->r_uid(pOracleSQLParser)
 *  - OracleSQLParser_r_union_return      pOracleSQLParser->r_union(pOracleSQLParser)
 *  - OracleSQLParser_r_unique_return      pOracleSQLParser->r_unique(pOracleSQLParser)
 *  - OracleSQLParser_r_update_return      pOracleSQLParser->r_update(pOracleSQLParser)
 *  - OracleSQLParser_r_user_return      pOracleSQLParser->r_user(pOracleSQLParser)
 *  - OracleSQLParser_r_validate_return      pOracleSQLParser->r_validate(pOracleSQLParser)
 *  - OracleSQLParser_r_values_return      pOracleSQLParser->r_values(pOracleSQLParser)
 *  - OracleSQLParser_r_varchar_return      pOracleSQLParser->r_varchar(pOracleSQLParser)
 *  - OracleSQLParser_r_varchar2_return      pOracleSQLParser->r_varchar2(pOracleSQLParser)
 *  - OracleSQLParser_r_view_return      pOracleSQLParser->r_view(pOracleSQLParser)
 *  - OracleSQLParser_r_whenever_return      pOracleSQLParser->r_whenever(pOracleSQLParser)
 *  - OracleSQLParser_r_where_return      pOracleSQLParser->r_where(pOracleSQLParser)
 *  - OracleSQLParser_r_with_return      pOracleSQLParser->r_with(pOracleSQLParser)
 *  - OracleSQLParser_k_a_return      pOracleSQLParser->k_a(pOracleSQLParser)
 *  - OracleSQLParser_k_at_return      pOracleSQLParser->k_at(pOracleSQLParser)
 *  - OracleSQLParser_k_automatic_return      pOracleSQLParser->k_automatic(pOracleSQLParser)
 *  - OracleSQLParser_k_bfile_return      pOracleSQLParser->k_bfile(pOracleSQLParser)
 *  - OracleSQLParser_k_binary_double_return      pOracleSQLParser->k_binary_double(pOracleSQLParser)
 *  - OracleSQLParser_k_binary_float_return      pOracleSQLParser->k_binary_float(pOracleSQLParser)
 *  - OracleSQLParser_k_binary_integer_return      pOracleSQLParser->k_binary_integer(pOracleSQLParser)
 *  - OracleSQLParser_k_blob_return      pOracleSQLParser->k_blob(pOracleSQLParser)
 *  - OracleSQLParser_k_block_return      pOracleSQLParser->k_block(pOracleSQLParser)
 *  - OracleSQLParser_k_boolean_return      pOracleSQLParser->k_boolean(pOracleSQLParser)
 *  - OracleSQLParser_k_both_return      pOracleSQLParser->k_both(pOracleSQLParser)
 *  - OracleSQLParser_k_breadth_return      pOracleSQLParser->k_breadth(pOracleSQLParser)
 *  - OracleSQLParser_k_byte_return      pOracleSQLParser->k_byte(pOracleSQLParser)
 *  - OracleSQLParser_k_cast_return      pOracleSQLParser->k_cast(pOracleSQLParser)
 *  - OracleSQLParser_k_character_return      pOracleSQLParser->k_character(pOracleSQLParser)
 *  - OracleSQLParser_k_clob_return      pOracleSQLParser->k_clob(pOracleSQLParser)
 *  - OracleSQLParser_k_cluster_set_return      pOracleSQLParser->k_cluster_set(pOracleSQLParser)
 *  - OracleSQLParser_k_connect_by_root_return      pOracleSQLParser->k_connect_by_root(pOracleSQLParser)
 *  - OracleSQLParser_k_constraint_return      pOracleSQLParser->k_constraint(pOracleSQLParser)
 *  - OracleSQLParser_k_count_return      pOracleSQLParser->k_count(pOracleSQLParser)
 *  - OracleSQLParser_k_cross_return      pOracleSQLParser->k_cross(pOracleSQLParser)
 *  - OracleSQLParser_k_cube_return      pOracleSQLParser->k_cube(pOracleSQLParser)
 *  - OracleSQLParser_k_cursor_return      pOracleSQLParser->k_cursor(pOracleSQLParser)
 *  - OracleSQLParser_k_cycle_return      pOracleSQLParser->k_cycle(pOracleSQLParser)
 *  - OracleSQLParser_k_day_return      pOracleSQLParser->k_day(pOracleSQLParser)
 *  - OracleSQLParser_k_dbtimezone_return      pOracleSQLParser->k_dbtimezone(pOracleSQLParser)
 *  - OracleSQLParser_k_dec_return      pOracleSQLParser->k_dec(pOracleSQLParser)
 *  - OracleSQLParser_k_decrement_return      pOracleSQLParser->k_decrement(pOracleSQLParser)
 *  - OracleSQLParser_k_dense_rank_return      pOracleSQLParser->k_dense_rank(pOracleSQLParser)
 *  - OracleSQLParser_k_depth_return      pOracleSQLParser->k_depth(pOracleSQLParser)
 *  - OracleSQLParser_k_dimension_return      pOracleSQLParser->k_dimension(pOracleSQLParser)
 *  - OracleSQLParser_k_double_return      pOracleSQLParser->k_double(pOracleSQLParser)
 *  - OracleSQLParser_k_empty_return      pOracleSQLParser->k_empty(pOracleSQLParser)
 *  - OracleSQLParser_k_end_return      pOracleSQLParser->k_end(pOracleSQLParser)
 *  - OracleSQLParser_k_equals_path_return      pOracleSQLParser->k_equals_path(pOracleSQLParser)
 *  - OracleSQLParser_k_errors_return      pOracleSQLParser->k_errors(pOracleSQLParser)
 *  - OracleSQLParser_k_escape_return      pOracleSQLParser->k_escape(pOracleSQLParser)
 *  - OracleSQLParser_k_exclude_return      pOracleSQLParser->k_exclude(pOracleSQLParser)
 *  - OracleSQLParser_k_extract_return      pOracleSQLParser->k_extract(pOracleSQLParser)
 *  - OracleSQLParser_k_first_return      pOracleSQLParser->k_first(pOracleSQLParser)
 *  - OracleSQLParser_k_following_return      pOracleSQLParser->k_following(pOracleSQLParser)
 *  - OracleSQLParser_k_full_return      pOracleSQLParser->k_full(pOracleSQLParser)
 *  - OracleSQLParser_k_grouping_return      pOracleSQLParser->k_grouping(pOracleSQLParser)
 *  - OracleSQLParser_k_hour_return      pOracleSQLParser->k_hour(pOracleSQLParser)
 *  - OracleSQLParser_k_ignore_return      pOracleSQLParser->k_ignore(pOracleSQLParser)
 *  - OracleSQLParser_k_include_return      pOracleSQLParser->k_include(pOracleSQLParser)
 *  - OracleSQLParser_k_infinite_return      pOracleSQLParser->k_infinite(pOracleSQLParser)
 *  - OracleSQLParser_k_inner_return      pOracleSQLParser->k_inner(pOracleSQLParser)
 *  - OracleSQLParser_k_int_return      pOracleSQLParser->k_int(pOracleSQLParser)
 *  - OracleSQLParser_k_interval_return      pOracleSQLParser->k_interval(pOracleSQLParser)
 *  - OracleSQLParser_k_iterate_return      pOracleSQLParser->k_iterate(pOracleSQLParser)
 *  - OracleSQLParser_k_join_return      pOracleSQLParser->k_join(pOracleSQLParser)
 *  - OracleSQLParser_k_keep_return      pOracleSQLParser->k_keep(pOracleSQLParser)
 *  - OracleSQLParser_k_last_return      pOracleSQLParser->k_last(pOracleSQLParser)
 *  - OracleSQLParser_k_leading_return      pOracleSQLParser->k_leading(pOracleSQLParser)
 *  - OracleSQLParser_k_left_return      pOracleSQLParser->k_left(pOracleSQLParser)
 *  - OracleSQLParser_k_like2_return      pOracleSQLParser->k_like2(pOracleSQLParser)
 *  - OracleSQLParser_k_like4_return      pOracleSQLParser->k_like4(pOracleSQLParser)
 *  - OracleSQLParser_k_likec_return      pOracleSQLParser->k_likec(pOracleSQLParser)
 *  - OracleSQLParser_k_limit_return      pOracleSQLParser->k_limit(pOracleSQLParser)
 *  - OracleSQLParser_k_listagg_return      pOracleSQLParser->k_listagg(pOracleSQLParser)
 *  - OracleSQLParser_k_lnnvl_return      pOracleSQLParser->k_lnnvl(pOracleSQLParser)
 *  - OracleSQLParser_k_local_return      pOracleSQLParser->k_local(pOracleSQLParser)
 *  - OracleSQLParser_k_locked_return      pOracleSQLParser->k_locked(pOracleSQLParser)
 *  - OracleSQLParser_k_log_return      pOracleSQLParser->k_log(pOracleSQLParser)
 *  - OracleSQLParser_k_main_return      pOracleSQLParser->k_main(pOracleSQLParser)
 *  - OracleSQLParser_k_matched_return      pOracleSQLParser->k_matched(pOracleSQLParser)
 *  - OracleSQLParser_k_maxvalue_return      pOracleSQLParser->k_maxvalue(pOracleSQLParser)
 *  - OracleSQLParser_k_measures_return      pOracleSQLParser->k_measures(pOracleSQLParser)
 *  - OracleSQLParser_k_member_return      pOracleSQLParser->k_member(pOracleSQLParser)
 *  - OracleSQLParser_k_merge_return      pOracleSQLParser->k_merge(pOracleSQLParser)
 *  - OracleSQLParser_k_minute_return      pOracleSQLParser->k_minute(pOracleSQLParser)
 *  - OracleSQLParser_k_mivalue_return      pOracleSQLParser->k_mivalue(pOracleSQLParser)
 *  - OracleSQLParser_k_mlslabel_return      pOracleSQLParser->k_mlslabel(pOracleSQLParser)
 *  - OracleSQLParser_k_model_return      pOracleSQLParser->k_model(pOracleSQLParser)
 *  - OracleSQLParser_k_month_return      pOracleSQLParser->k_month(pOracleSQLParser)
 *  - OracleSQLParser_k_multiset_return      pOracleSQLParser->k_multiset(pOracleSQLParser)
 *  - OracleSQLParser_k_nan_return      pOracleSQLParser->k_nan(pOracleSQLParser)
 *  - OracleSQLParser_k_national_return      pOracleSQLParser->k_national(pOracleSQLParser)
 *  - OracleSQLParser_k_natural_return      pOracleSQLParser->k_natural(pOracleSQLParser)
 *  - OracleSQLParser_k_nav_return      pOracleSQLParser->k_nav(pOracleSQLParser)
 *  - OracleSQLParser_k_nchar_return      pOracleSQLParser->k_nchar(pOracleSQLParser)
 *  - OracleSQLParser_k_nclob_return      pOracleSQLParser->k_nclob(pOracleSQLParser)
 *  - OracleSQLParser_k_nocycle_return      pOracleSQLParser->k_nocycle(pOracleSQLParser)
 *  - OracleSQLParser_k_nulls_return      pOracleSQLParser->k_nulls(pOracleSQLParser)
 *  - OracleSQLParser_k_numeric_return      pOracleSQLParser->k_numeric(pOracleSQLParser)
 *  - OracleSQLParser_k_nvarchar_return      pOracleSQLParser->k_nvarchar(pOracleSQLParser)
 *  - OracleSQLParser_k_nvarchar2_return      pOracleSQLParser->k_nvarchar2(pOracleSQLParser)
 *  - OracleSQLParser_k_only_return      pOracleSQLParser->k_only(pOracleSQLParser)
 *  - OracleSQLParser_k_outer_return      pOracleSQLParser->k_outer(pOracleSQLParser)
 *  - OracleSQLParser_k_over_return      pOracleSQLParser->k_over(pOracleSQLParser)
 *  - OracleSQLParser_k_partition_return      pOracleSQLParser->k_partition(pOracleSQLParser)
 *  - OracleSQLParser_k_percent_rank_return      pOracleSQLParser->k_percent_rank(pOracleSQLParser)
 *  - OracleSQLParser_k_percentile_cont_return      pOracleSQLParser->k_percentile_cont(pOracleSQLParser)
 *  - OracleSQLParser_k_percentile_disc_return      pOracleSQLParser->k_percentile_disc(pOracleSQLParser)
 *  - OracleSQLParser_k_pivot_return      pOracleSQLParser->k_pivot(pOracleSQLParser)
 *  - OracleSQLParser_k_pls_integer_return      pOracleSQLParser->k_pls_integer(pOracleSQLParser)
 *  - OracleSQLParser_k_positive_return      pOracleSQLParser->k_positive(pOracleSQLParser)
 *  - OracleSQLParser_k_preceding_return      pOracleSQLParser->k_preceding(pOracleSQLParser)
 *  - OracleSQLParser_k_precision_return      pOracleSQLParser->k_precision(pOracleSQLParser)
 *  - OracleSQLParser_k_present_return      pOracleSQLParser->k_present(pOracleSQLParser)
 *  - OracleSQLParser_k_range_return      pOracleSQLParser->k_range(pOracleSQLParser)
 *  - OracleSQLParser_k_read_return      pOracleSQLParser->k_read(pOracleSQLParser)
 *  - OracleSQLParser_k_real_return      pOracleSQLParser->k_real(pOracleSQLParser)
 *  - OracleSQLParser_k_reference_return      pOracleSQLParser->k_reference(pOracleSQLParser)
 *  - OracleSQLParser_k_regexp_like_return      pOracleSQLParser->k_regexp_like(pOracleSQLParser)
 *  - OracleSQLParser_k_reject_return      pOracleSQLParser->k_reject(pOracleSQLParser)
 *  - OracleSQLParser_k_respect_return      pOracleSQLParser->k_respect(pOracleSQLParser)
 *  - OracleSQLParser_k_return_return      pOracleSQLParser->k_return(pOracleSQLParser)
 *  - OracleSQLParser_k_returning_return      pOracleSQLParser->k_returning(pOracleSQLParser)
 *  - OracleSQLParser_k_right_return      pOracleSQLParser->k_right(pOracleSQLParser)
 *  - OracleSQLParser_k_rollup_return      pOracleSQLParser->k_rollup(pOracleSQLParser)
 *  - OracleSQLParser_k_rules_return      pOracleSQLParser->k_rules(pOracleSQLParser)
 *  - OracleSQLParser_k_sample_return      pOracleSQLParser->k_sample(pOracleSQLParser)
 *  - OracleSQLParser_k_scn_return      pOracleSQLParser->k_scn(pOracleSQLParser)
 *  - OracleSQLParser_k_search_return      pOracleSQLParser->k_search(pOracleSQLParser)
 *  - OracleSQLParser_k_second_return      pOracleSQLParser->k_second(pOracleSQLParser)
 *  - OracleSQLParser_k_seed_return      pOracleSQLParser->k_seed(pOracleSQLParser)
 *  - OracleSQLParser_k_sequential_return      pOracleSQLParser->k_sequential(pOracleSQLParser)
 *  - OracleSQLParser_k_sessiontimezone_return      pOracleSQLParser->k_sessiontimezone(pOracleSQLParser)
 *  - OracleSQLParser_k_sets_return      pOracleSQLParser->k_sets(pOracleSQLParser)
 *  - OracleSQLParser_k_siblings_return      pOracleSQLParser->k_siblings(pOracleSQLParser)
 *  - OracleSQLParser_k_single_return      pOracleSQLParser->k_single(pOracleSQLParser)
 *  - OracleSQLParser_k_skip_return      pOracleSQLParser->k_skip(pOracleSQLParser)
 *  - OracleSQLParser_k_some_return      pOracleSQLParser->k_some(pOracleSQLParser)
 *  - OracleSQLParser_k_sql_return      pOracleSQLParser->k_sql(pOracleSQLParser)
 *  - OracleSQLParser_k_submultiset_return      pOracleSQLParser->k_submultiset(pOracleSQLParser)
 *  - OracleSQLParser_k_subpartition_return      pOracleSQLParser->k_subpartition(pOracleSQLParser)
 *  - OracleSQLParser_k_the_return      pOracleSQLParser->k_the(pOracleSQLParser)
 *  - OracleSQLParser_k_time_return      pOracleSQLParser->k_time(pOracleSQLParser)
 *  - OracleSQLParser_k_timestamp_return      pOracleSQLParser->k_timestamp(pOracleSQLParser)
 *  - OracleSQLParser_k_timezone_hour_return      pOracleSQLParser->k_timezone_hour(pOracleSQLParser)
 *  - OracleSQLParser_k_timezone_minute_return      pOracleSQLParser->k_timezone_minute(pOracleSQLParser)
 *  - OracleSQLParser_k_timezone_region_return      pOracleSQLParser->k_timezone_region(pOracleSQLParser)
 *  - OracleSQLParser_k_timezone_abbr_return      pOracleSQLParser->k_timezone_abbr(pOracleSQLParser)
 *  - OracleSQLParser_k_to_return      pOracleSQLParser->k_to(pOracleSQLParser)
 *  - OracleSQLParser_k_trailing_return      pOracleSQLParser->k_trailing(pOracleSQLParser)
 *  - OracleSQLParser_k_trim_return      pOracleSQLParser->k_trim(pOracleSQLParser)
 *  - OracleSQLParser_k_type_return      pOracleSQLParser->k_type(pOracleSQLParser)
 *  - OracleSQLParser_k_unbounded_return      pOracleSQLParser->k_unbounded(pOracleSQLParser)
 *  - OracleSQLParser_k_under_path_return      pOracleSQLParser->k_under_path(pOracleSQLParser)
 *  - OracleSQLParser_k_unlimited_return      pOracleSQLParser->k_unlimited(pOracleSQLParser)
 *  - OracleSQLParser_k_unpivot_return      pOracleSQLParser->k_unpivot(pOracleSQLParser)
 *  - OracleSQLParser_k_until_return      pOracleSQLParser->k_until(pOracleSQLParser)
 *  - OracleSQLParser_k_updated_return      pOracleSQLParser->k_updated(pOracleSQLParser)
 *  - OracleSQLParser_k_upsert_return      pOracleSQLParser->k_upsert(pOracleSQLParser)
 *  - OracleSQLParser_k_urowid_return      pOracleSQLParser->k_urowid(pOracleSQLParser)
 *  - OracleSQLParser_k_using_return      pOracleSQLParser->k_using(pOracleSQLParser)
 *  - OracleSQLParser_k_value_return      pOracleSQLParser->k_value(pOracleSQLParser)
 *  - OracleSQLParser_k_varying_return      pOracleSQLParser->k_varying(pOracleSQLParser)
 *  - OracleSQLParser_k_versions_return      pOracleSQLParser->k_versions(pOracleSQLParser)
 *  - OracleSQLParser_k_wait_return      pOracleSQLParser->k_wait(pOracleSQLParser)
 *  - OracleSQLParser_k_when_return      pOracleSQLParser->k_when(pOracleSQLParser)
 *  - OracleSQLParser_k_within_return      pOracleSQLParser->k_within(pOracleSQLParser)
 *  - OracleSQLParser_k_xml_return      pOracleSQLParser->k_xml(pOracleSQLParser)
 *  - OracleSQLParser_k_year_return      pOracleSQLParser->k_year(pOracleSQLParser)
 *  - OracleSQLParser_k_zone_return      pOracleSQLParser->k_zone(pOracleSQLParser)
 *  - OracleSQLParser_keyword_return      pOracleSQLParser->keyword(pOracleSQLParser)
 *  - OracleSQLParser_quoted_string_return      pOracleSQLParser->quoted_string(pOracleSQLParser)
 *  - OracleSQLParser_doublevertbar_return      pOracleSQLParser->doublevertbar(pOracleSQLParser)
 *  - OracleSQLParser_not_equal_return      pOracleSQLParser->not_equal(pOracleSQLParser)
 *  - OracleSQLParser_leq_return      pOracleSQLParser->leq(pOracleSQLParser)
 *  - OracleSQLParser_geq_return      pOracleSQLParser->geq(pOracleSQLParser)
 *
 * The return type for any particular rule is of course determined by the source
 * grammar file.
 */
// [The "BSD licence"]
// Copyright (c) 2005-2009 Jim Idle, Temporal Wave LLC
// http://www.temporal-wave.com
// http://www.linkedin.com/in/jimidle
//
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#ifndef	_OracleSQLParser_H
#define _OracleSQLParser_H
/* =============================================================================
 * Standard antlr3 C runtime definitions
 */
#include    <antlr3.h>

/* End of standard antlr 3 runtime definitions
 * =============================================================================
 */

//#include "macros.h"
//#include "error_handler.h"

#ifdef _MSC_VER
#define snprintf _snprintf
#define ssize_t SSIZE_T
#define uint32_t UINT32
#define strncasecmp _strnicmp
#define strcasecmp _stricmp
#endif
 
#ifdef __cplusplus
extern "C" {
#endif

// Forward declare the context typedef so that we can use it before it is
// properly defined. Delegators and delegates (from import statements) are
// interdependent and their context structures contain pointers to each other
// C only allows such things to be declared if you pre-declare the typedef.
//
typedef struct OracleSQLParser_Ctx_struct OracleSQLParser, * pOracleSQLParser;



#ifdef	ANTLR3_WINDOWS
// Disable: Unreferenced parameter,							- Rules with parameters that are not used
//          constant conditional,							- ANTLR realizes that a prediction is always true (synpred usually)
//          initialized but unused variable					- tree rewrite variables declared but not needed
//          Unreferenced local variable						- lexer rule declares but does not always use _type
//          potentially unitialized variable used			- retval always returned from a rule 
//			unreferenced local function has been removed	- susually getTokenNames or freeScope, they can go without warnigns
//
// These are only really displayed at warning level /W4 but that is the code ideal I am aiming at
// and the codegen must generate some of these warnings by necessity, apart from 4100, which is
// usually generated when a parser rule is given a parameter that it does not use. Mostly though
// this is a matter of orthogonality hence I disable that one.
//
#pragma warning( disable : 4100 )
#pragma warning( disable : 4101 )
#pragma warning( disable : 4127 )
#pragma warning( disable : 4189 )
#pragma warning( disable : 4505 )
#pragma warning( disable : 4701 )
#endif

/* ========================
 * BACKTRACKING IS ENABLED
 * ========================
 */
typedef struct OracleSQLParser_start_rule_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_start_rule_return;

typedef struct OracleSQLParser_delete_statement_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_delete_statement_return;

typedef struct OracleSQLParser_merge_statement_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_merge_statement_return;

typedef struct OracleSQLParser_merge_update_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_merge_update_clause_return;

typedef struct OracleSQLParser_merge_insert_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_merge_insert_clause_return;

typedef struct OracleSQLParser_insert_statement_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_insert_statement_return;

typedef struct OracleSQLParser_single_table_insert_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_single_table_insert_return;

typedef struct OracleSQLParser_insert_into_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_insert_into_clause_return;

typedef struct OracleSQLParser_values_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_values_clause_return;

typedef struct OracleSQLParser_returning_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_returning_clause_return;

typedef struct OracleSQLParser_multi_table_insert_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_multi_table_insert_return;

typedef struct OracleSQLParser_conditional_insert_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_conditional_insert_clause_return;

typedef struct OracleSQLParser_dml_table_expression_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_dml_table_expression_clause_return;

typedef struct OracleSQLParser_error_logging_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_error_logging_clause_return;

typedef struct OracleSQLParser_data_item_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_data_item_return;

typedef struct OracleSQLParser_update_statement_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_update_statement_return;

typedef struct OracleSQLParser_update_set_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_update_set_clause_return;

typedef struct OracleSQLParser_update_set_clause_part1_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_update_set_clause_part1_return;

typedef struct OracleSQLParser_update_set_clause_part2_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_update_set_clause_part2_return;

typedef struct OracleSQLParser_select_statement_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_select_statement_return;

typedef struct OracleSQLParser_subquery_factoring_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_subquery_factoring_clause_return;

typedef struct OracleSQLParser_subquery_factoring_clause_part_first_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_subquery_factoring_clause_part_first_return;

typedef struct OracleSQLParser_subquery_factoring_clause_part_next_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_subquery_factoring_clause_part_next_return;

typedef struct OracleSQLParser_search_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_search_clause_return;

typedef struct OracleSQLParser_cycle_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_cycle_clause_return;

typedef struct OracleSQLParser_select_list_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_select_list_return;

typedef struct OracleSQLParser_displayed_column_part_first_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_displayed_column_part_first_return;

typedef struct OracleSQLParser_displayed_column_part_next_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_displayed_column_part_next_return;

typedef struct OracleSQLParser_displayed_column_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_displayed_column_return;

typedef struct OracleSQLParser_sql_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_sql_expression_return;

typedef struct OracleSQLParser_expr_add_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_expr_add_return;

typedef struct OracleSQLParser_expr_mul_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_expr_mul_return;

typedef struct OracleSQLParser_expr_sign_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_expr_sign_return;

typedef struct OracleSQLParser_expr_expr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_expr_expr_return;

typedef struct OracleSQLParser_expr_paren_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_expr_paren_return;

typedef struct OracleSQLParser_nested_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_nested_expression_return;

typedef struct OracleSQLParser_function_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_function_expression_return;

typedef struct OracleSQLParser_call_parameters_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_call_parameters_return;

typedef struct OracleSQLParser_call_parameter_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_call_parameter_return;

typedef struct OracleSQLParser_parameter_name_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_parameter_name_return;

typedef struct OracleSQLParser_special_function_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_special_function_return;

typedef struct OracleSQLParser_case_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_case_expression_return;

typedef struct OracleSQLParser_cursor_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_cursor_expression_return;

typedef struct OracleSQLParser_simple_case_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_simple_case_expression_return;

typedef struct OracleSQLParser_searched_case_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_searched_case_expression_return;

typedef struct OracleSQLParser_else_case_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_else_case_expression_return;

typedef struct OracleSQLParser_object_access_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_object_access_expression_return;

typedef struct OracleSQLParser_simple_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_simple_expression_return;

typedef struct OracleSQLParser_query_block_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_query_block_return;

typedef struct OracleSQLParser_subquery_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_subquery_return;

typedef struct OracleSQLParser_timestamp_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_timestamp_expression_return;

typedef struct OracleSQLParser_interval_x_to_y_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_interval_x_to_y_return;

typedef struct OracleSQLParser_precision_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_precision_return;

typedef struct OracleSQLParser_extract_datetime_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_extract_datetime_expression_return;

typedef struct OracleSQLParser_datetime_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_datetime_expression_return;

typedef struct OracleSQLParser_interval_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_interval_expression_return;

typedef struct OracleSQLParser_special_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_special_expression_return;

typedef struct OracleSQLParser_cluster_set_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_cluster_set_clause_return;

typedef struct OracleSQLParser_cast_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_cast_expression_return;

typedef struct OracleSQLParser_datatype_name_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_datatype_name_return;

typedef struct OracleSQLParser_boolean_literal_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_boolean_literal_return;

typedef struct OracleSQLParser_t_alias_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_t_alias_return;

typedef struct OracleSQLParser_c_alias_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_c_alias_return;

typedef struct OracleSQLParser_column_spec_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_column_spec_return;

typedef struct OracleSQLParser_pseudo_column_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_pseudo_column_return;

typedef struct OracleSQLParser_function_name_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_function_name_return;

typedef struct OracleSQLParser_function_spec_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_function_spec_return;

typedef struct OracleSQLParser_identifier_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_identifier_return;

typedef struct OracleSQLParser_bind_variable_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_bind_variable_return;

typedef struct OracleSQLParser_sql_identifier_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_sql_identifier_return;

typedef struct OracleSQLParser_table_reference_list_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_table_reference_list_return;

typedef struct OracleSQLParser_table_reference_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_table_reference_return;

typedef struct OracleSQLParser_query_table_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_query_table_expression_return;

typedef struct OracleSQLParser_flashback_query_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_flashback_query_clause_return;

typedef struct OracleSQLParser_sample_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_sample_clause_return;

typedef struct OracleSQLParser_partition_extension_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_partition_extension_clause_return;

typedef struct OracleSQLParser_subquery_restricrion_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_subquery_restricrion_clause_return;

typedef struct OracleSQLParser_table_collection_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_table_collection_clause_return;

typedef struct OracleSQLParser_join_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_join_clause_return;

typedef struct OracleSQLParser_inner_cross_join_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_inner_cross_join_clause_return;

typedef struct OracleSQLParser_outer_join_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_outer_join_clause_return;

typedef struct OracleSQLParser_query_partition_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_query_partition_clause_return;

typedef struct OracleSQLParser_outer_join_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_outer_join_type_return;

typedef struct OracleSQLParser_joining_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_joining_clause_return;

typedef struct OracleSQLParser_sample_percent_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_sample_percent_return;

typedef struct OracleSQLParser_seed_value_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_seed_value_return;

typedef struct OracleSQLParser_outer_join_sign_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_outer_join_sign_return;

typedef struct OracleSQLParser_table_name_long_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_table_name_long_return;

typedef struct OracleSQLParser_table_name_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_table_name_return;

typedef struct OracleSQLParser_schema_name_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_schema_name_return;

typedef struct OracleSQLParser_package_name_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_package_name_return;

typedef struct OracleSQLParser_dblink_name_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_dblink_name_return;

typedef struct OracleSQLParser_column_specs_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_column_specs_return;

typedef struct OracleSQLParser_partition_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_partition_return;

typedef struct OracleSQLParser_partition_key_value_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_partition_key_value_return;

typedef struct OracleSQLParser_subpartition_key_value_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_subpartition_key_value_return;

typedef struct OracleSQLParser_constraint_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_constraint_return;

typedef struct OracleSQLParser_collection_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_collection_expression_return;

typedef struct OracleSQLParser_where_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_where_clause_return;

typedef struct OracleSQLParser_hierarchical_query_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_hierarchical_query_clause_return;

typedef struct OracleSQLParser_group_by_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_group_by_clause_return;

typedef struct OracleSQLParser_group_by_exprs_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_group_by_exprs_return;

typedef struct OracleSQLParser_group_by_expr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_group_by_expr_return;

typedef struct OracleSQLParser_rollup_cube_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_rollup_cube_clause_return;

typedef struct OracleSQLParser_grouping_sets_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_grouping_sets_clause_return;

typedef struct OracleSQLParser_grouping_sets_exprs_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_grouping_sets_exprs_return;

typedef struct OracleSQLParser_grouping_sets_expr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_grouping_sets_expr_return;

typedef struct OracleSQLParser_sql_condition_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_sql_condition_return;

typedef struct OracleSQLParser_condition_or_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_or_return;

typedef struct OracleSQLParser_condition_and_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_and_return;

typedef struct OracleSQLParser_condition_not_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_not_return;

typedef struct OracleSQLParser_condition_expr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_expr_return;

typedef struct OracleSQLParser_condition_exists_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_exists_return;

typedef struct OracleSQLParser_condition_is_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_is_return;

typedef struct OracleSQLParser_condition_comparison_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_comparison_return;

typedef struct OracleSQLParser_condition_group_comparison_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_group_comparison_return;

typedef struct OracleSQLParser_condition_in_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_in_return;

typedef struct OracleSQLParser_condition_is_a_set_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_is_a_set_return;

typedef struct OracleSQLParser_condition_is_any_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_is_any_return;

typedef struct OracleSQLParser_condition_is_empty_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_is_empty_return;

typedef struct OracleSQLParser_condition_is_of_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_is_of_type_return;

typedef struct OracleSQLParser_condition_is_present_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_is_present_return;

typedef struct OracleSQLParser_condition_like_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_like_return;

typedef struct OracleSQLParser_condition_memeber_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_memeber_return;

typedef struct OracleSQLParser_condition_between_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_between_return;

typedef struct OracleSQLParser_condition_regexp_like_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_regexp_like_return;

typedef struct OracleSQLParser_condition_submultiset_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_submultiset_return;

typedef struct OracleSQLParser_condition_equals_path_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_equals_path_return;

typedef struct OracleSQLParser_condition_under_path_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_under_path_return;

typedef struct OracleSQLParser_levels_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_levels_return;

typedef struct OracleSQLParser_correlation_integer_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_correlation_integer_return;

typedef struct OracleSQLParser_path_string_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_path_string_return;

typedef struct OracleSQLParser_type_names_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_type_names_return;

typedef struct OracleSQLParser_integer_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_integer_return;

typedef struct OracleSQLParser_column_name_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_column_name_return;

typedef struct OracleSQLParser_nested_table_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_nested_table_return;

typedef struct OracleSQLParser_nested_table_column_name_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_nested_table_column_name_return;

typedef struct OracleSQLParser_sql_expressions_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_sql_expressions_return;

typedef struct OracleSQLParser_grouping_sets_expression_list_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_grouping_sets_expression_list_return;

typedef struct OracleSQLParser_grouping_expression_list_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_grouping_expression_list_return;

typedef struct OracleSQLParser_expression_list_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_expression_list_return;

typedef struct OracleSQLParser_cell_reference_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_cell_reference_return;

typedef struct OracleSQLParser_condition_paren_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_condition_paren_return;

typedef struct OracleSQLParser_model_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_model_clause_return;

typedef struct OracleSQLParser_cell_reference_options_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_cell_reference_options_return;

typedef struct OracleSQLParser_return_rows_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_return_rows_clause_return;

typedef struct OracleSQLParser_reference_model_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_reference_model_return;

typedef struct OracleSQLParser_reference_model_name_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_reference_model_name_return;

typedef struct OracleSQLParser_main_model_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_main_model_return;

typedef struct OracleSQLParser_main_model_name_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_main_model_name_return;

typedef struct OracleSQLParser_model_column_clauses_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_model_column_clauses_return;

typedef struct OracleSQLParser_model_columns_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_model_columns_return;

typedef struct OracleSQLParser_model_column_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_model_column_return;

typedef struct OracleSQLParser_model_rules_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_model_rules_clause_return;

typedef struct OracleSQLParser_model_rules_exprs_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_model_rules_exprs_return;

typedef struct OracleSQLParser_model_rules_expr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_model_rules_expr_return;

typedef struct OracleSQLParser_cell_assignment_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_cell_assignment_return;

typedef struct OracleSQLParser_cell_assignment_exprs_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_cell_assignment_exprs_return;

typedef struct OracleSQLParser_cell_assignment_expr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_cell_assignment_expr_return;

typedef struct OracleSQLParser_measure_column_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_measure_column_return;

typedef struct OracleSQLParser_single_column_for_loop_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_single_column_for_loop_return;

typedef struct OracleSQLParser_pattern_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_pattern_return;

typedef struct OracleSQLParser_literal_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_literal_return;

typedef struct OracleSQLParser_literals_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_literals_return;

typedef struct OracleSQLParser_multi_column_for_loop_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_multi_column_for_loop_return;

typedef struct OracleSQLParser_bracket_literals_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_bracket_literals_return;

typedef struct OracleSQLParser_bracket_literals_list_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_bracket_literals_list_return;

typedef struct OracleSQLParser_union_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_union_clause_return;

typedef struct OracleSQLParser_order_by_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_order_by_clause_return;

typedef struct OracleSQLParser_order_by_clause_part_first_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_order_by_clause_part_first_return;

typedef struct OracleSQLParser_order_by_clause_part_next_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_order_by_clause_part_next_return;

typedef struct OracleSQLParser_analytic_function_name_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_analytic_function_name_return;

typedef struct OracleSQLParser_analytic_function_call_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_analytic_function_call_return;

typedef struct OracleSQLParser_analytic_function_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_analytic_function_return;

typedef struct OracleSQLParser_count_function_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_count_function_return;

typedef struct OracleSQLParser_analytic_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_analytic_clause_return;

typedef struct OracleSQLParser_windowing_clause_part_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_windowing_clause_part_return;

typedef struct OracleSQLParser_windowing_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_windowing_clause_return;

typedef struct OracleSQLParser_aggregate_function_name_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_aggregate_function_name_return;

typedef struct OracleSQLParser_aggregate_function_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_aggregate_function_return;

typedef struct OracleSQLParser_percent_rank_aggregate_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_percent_rank_aggregate_return;

typedef struct OracleSQLParser_dense_rank_aggregate_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_dense_rank_aggregate_return;

typedef struct OracleSQLParser_percent_rank_analytic_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_percent_rank_analytic_return;

typedef struct OracleSQLParser_percent_cont_disc_analytic_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_percent_cont_disc_analytic_return;

typedef struct OracleSQLParser_dense_rank_analytic_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_dense_rank_analytic_return;

typedef struct OracleSQLParser_first_last_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_first_last_return;

typedef struct OracleSQLParser_listagg_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_listagg_return;

typedef struct OracleSQLParser_for_update_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_for_update_clause_return;

typedef struct OracleSQLParser_for_update_clause_part_first_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_for_update_clause_part_first_return;

typedef struct OracleSQLParser_for_update_clause_part_next_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_for_update_clause_part_next_return;

typedef struct OracleSQLParser_pivot_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_pivot_clause_return;

typedef struct OracleSQLParser_pivot_for_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_pivot_for_clause_return;

typedef struct OracleSQLParser_pivot_in_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_pivot_in_clause_return;

typedef struct OracleSQLParser_unpivot_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_unpivot_clause_return;

typedef struct OracleSQLParser_unpivot_in_clause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_unpivot_in_clause_return;

typedef struct OracleSQLParser_constant_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_constant_return;

typedef struct OracleSQLParser_r_access_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_access_return;

typedef struct OracleSQLParser_r_add_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_add_return;

typedef struct OracleSQLParser_r_all_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_all_return;

typedef struct OracleSQLParser_r_alter_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_alter_return;

typedef struct OracleSQLParser_r_and_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_and_return;

typedef struct OracleSQLParser_r_any_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_any_return;

typedef struct OracleSQLParser_r_arraylen_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_arraylen_return;

typedef struct OracleSQLParser_r_as_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_as_return;

typedef struct OracleSQLParser_r_asc_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_asc_return;

typedef struct OracleSQLParser_r_audit_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_audit_return;

typedef struct OracleSQLParser_r_between_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_between_return;

typedef struct OracleSQLParser_r_by_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_by_return;

typedef struct OracleSQLParser_r_case_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_case_return;

typedef struct OracleSQLParser_r_char_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_char_return;

typedef struct OracleSQLParser_r_check_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_check_return;

typedef struct OracleSQLParser_r_cluster_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_cluster_return;

typedef struct OracleSQLParser_r_column_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_column_return;

typedef struct OracleSQLParser_r_comment_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_comment_return;

typedef struct OracleSQLParser_r_compress_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_compress_return;

typedef struct OracleSQLParser_r_connect_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_connect_return;

typedef struct OracleSQLParser_r_create_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_create_return;

typedef struct OracleSQLParser_r_current_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_current_return;

typedef struct OracleSQLParser_r_date_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_date_return;

typedef struct OracleSQLParser_r_decimal_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_decimal_return;

typedef struct OracleSQLParser_r_default_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_default_return;

typedef struct OracleSQLParser_r_delete_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_delete_return;

typedef struct OracleSQLParser_r_desc_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_desc_return;

typedef struct OracleSQLParser_r_distinct_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_distinct_return;

typedef struct OracleSQLParser_r_drop_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_drop_return;

typedef struct OracleSQLParser_r_else_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_else_return;

typedef struct OracleSQLParser_r_exclusive_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_exclusive_return;

typedef struct OracleSQLParser_r_exists_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_exists_return;

typedef struct OracleSQLParser_r_false_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_false_return;

typedef struct OracleSQLParser_r_file_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_file_return;

typedef struct OracleSQLParser_r_float_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_float_return;

typedef struct OracleSQLParser_r_for_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_for_return;

typedef struct OracleSQLParser_r_from_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_from_return;

typedef struct OracleSQLParser_r_grant_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_grant_return;

typedef struct OracleSQLParser_r_group_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_group_return;

typedef struct OracleSQLParser_r_having_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_having_return;

typedef struct OracleSQLParser_r_identified_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_identified_return;

typedef struct OracleSQLParser_r_immediate_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_immediate_return;

typedef struct OracleSQLParser_r_in_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_in_return;

typedef struct OracleSQLParser_r_increment_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_increment_return;

typedef struct OracleSQLParser_r_index_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_index_return;

typedef struct OracleSQLParser_r_initial_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_initial_return;

typedef struct OracleSQLParser_r_insert_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_insert_return;

typedef struct OracleSQLParser_r_integer_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_integer_return;

typedef struct OracleSQLParser_r_intersect_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_intersect_return;

typedef struct OracleSQLParser_r_into_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_into_return;

typedef struct OracleSQLParser_r_is_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_is_return;

typedef struct OracleSQLParser_r_level_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_level_return;

typedef struct OracleSQLParser_r_like_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_like_return;

typedef struct OracleSQLParser_r_lock_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_lock_return;

typedef struct OracleSQLParser_r_long_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_long_return;

typedef struct OracleSQLParser_r_maxextents_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_maxextents_return;

typedef struct OracleSQLParser_r_minus_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_minus_return;

typedef struct OracleSQLParser_r_mode_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_mode_return;

typedef struct OracleSQLParser_r_modify_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_modify_return;

typedef struct OracleSQLParser_r_noaudit_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_noaudit_return;

typedef struct OracleSQLParser_r_nocompress_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_nocompress_return;

typedef struct OracleSQLParser_r_not_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_not_return;

typedef struct OracleSQLParser_r_notfound_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_notfound_return;

typedef struct OracleSQLParser_r_nowait_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_nowait_return;

typedef struct OracleSQLParser_r_null_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_null_return;

typedef struct OracleSQLParser_r_number_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_number_return;

typedef struct OracleSQLParser_r_of_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_of_return;

typedef struct OracleSQLParser_r_offline_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_offline_return;

typedef struct OracleSQLParser_r_on_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_on_return;

typedef struct OracleSQLParser_r_online_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_online_return;

typedef struct OracleSQLParser_r_option_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_option_return;

typedef struct OracleSQLParser_r_or_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_or_return;

typedef struct OracleSQLParser_r_order_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_order_return;

typedef struct OracleSQLParser_r_pctfree_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_pctfree_return;

typedef struct OracleSQLParser_r_prior_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_prior_return;

typedef struct OracleSQLParser_r_privileges_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_privileges_return;

typedef struct OracleSQLParser_r_public_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_public_return;

typedef struct OracleSQLParser_r_raw_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_raw_return;

typedef struct OracleSQLParser_r_rename_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_rename_return;

typedef struct OracleSQLParser_r_resource_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_resource_return;

typedef struct OracleSQLParser_r_revoke_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_revoke_return;

typedef struct OracleSQLParser_r_row_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_row_return;

typedef struct OracleSQLParser_r_rowid_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_rowid_return;

typedef struct OracleSQLParser_r_rowlabel_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_rowlabel_return;

typedef struct OracleSQLParser_r_rownum_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_rownum_return;

typedef struct OracleSQLParser_r_rows_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_rows_return;

typedef struct OracleSQLParser_r_select_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_select_return;

typedef struct OracleSQLParser_r_session_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_session_return;

typedef struct OracleSQLParser_r_set_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_set_return;

typedef struct OracleSQLParser_r_share_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_share_return;

typedef struct OracleSQLParser_r_size_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_size_return;

typedef struct OracleSQLParser_r_smallint_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_smallint_return;

typedef struct OracleSQLParser_r_sqlbuf_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_sqlbuf_return;

typedef struct OracleSQLParser_r_start_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_start_return;

typedef struct OracleSQLParser_r_successful_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_successful_return;

typedef struct OracleSQLParser_r_synonym_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_synonym_return;

typedef struct OracleSQLParser_r_sysdate_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_sysdate_return;

typedef struct OracleSQLParser_r_table_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_table_return;

typedef struct OracleSQLParser_r_then_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_then_return;

typedef struct OracleSQLParser_r_to_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_to_return;

typedef struct OracleSQLParser_r_trigger_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_trigger_return;

typedef struct OracleSQLParser_r_true_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_true_return;

typedef struct OracleSQLParser_r_uid_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_uid_return;

typedef struct OracleSQLParser_r_union_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_union_return;

typedef struct OracleSQLParser_r_unique_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_unique_return;

typedef struct OracleSQLParser_r_update_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_update_return;

typedef struct OracleSQLParser_r_user_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_user_return;

typedef struct OracleSQLParser_r_validate_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_validate_return;

typedef struct OracleSQLParser_r_values_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_values_return;

typedef struct OracleSQLParser_r_varchar_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_varchar_return;

typedef struct OracleSQLParser_r_varchar2_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_varchar2_return;

typedef struct OracleSQLParser_r_view_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_view_return;

typedef struct OracleSQLParser_r_whenever_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_whenever_return;

typedef struct OracleSQLParser_r_where_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_where_return;

typedef struct OracleSQLParser_r_with_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_r_with_return;

typedef struct OracleSQLParser_k_a_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_a_return;

typedef struct OracleSQLParser_k_at_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_at_return;

typedef struct OracleSQLParser_k_automatic_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_automatic_return;

typedef struct OracleSQLParser_k_bfile_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_bfile_return;

typedef struct OracleSQLParser_k_binary_double_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_binary_double_return;

typedef struct OracleSQLParser_k_binary_float_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_binary_float_return;

typedef struct OracleSQLParser_k_binary_integer_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_binary_integer_return;

typedef struct OracleSQLParser_k_blob_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_blob_return;

typedef struct OracleSQLParser_k_block_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_block_return;

typedef struct OracleSQLParser_k_boolean_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_boolean_return;

typedef struct OracleSQLParser_k_both_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_both_return;

typedef struct OracleSQLParser_k_breadth_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_breadth_return;

typedef struct OracleSQLParser_k_byte_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_byte_return;

typedef struct OracleSQLParser_k_cast_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_cast_return;

typedef struct OracleSQLParser_k_character_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_character_return;

typedef struct OracleSQLParser_k_clob_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_clob_return;

typedef struct OracleSQLParser_k_cluster_set_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_cluster_set_return;

typedef struct OracleSQLParser_k_connect_by_root_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_connect_by_root_return;

typedef struct OracleSQLParser_k_constraint_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_constraint_return;

typedef struct OracleSQLParser_k_count_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_count_return;

typedef struct OracleSQLParser_k_cross_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_cross_return;

typedef struct OracleSQLParser_k_cube_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_cube_return;

typedef struct OracleSQLParser_k_cursor_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_cursor_return;

typedef struct OracleSQLParser_k_cycle_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_cycle_return;

typedef struct OracleSQLParser_k_day_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_day_return;

typedef struct OracleSQLParser_k_dbtimezone_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_dbtimezone_return;

typedef struct OracleSQLParser_k_dec_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_dec_return;

typedef struct OracleSQLParser_k_decrement_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_decrement_return;

typedef struct OracleSQLParser_k_dense_rank_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_dense_rank_return;

typedef struct OracleSQLParser_k_depth_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_depth_return;

typedef struct OracleSQLParser_k_dimension_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_dimension_return;

typedef struct OracleSQLParser_k_double_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_double_return;

typedef struct OracleSQLParser_k_empty_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_empty_return;

typedef struct OracleSQLParser_k_end_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_end_return;

typedef struct OracleSQLParser_k_equals_path_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_equals_path_return;

typedef struct OracleSQLParser_k_errors_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_errors_return;

typedef struct OracleSQLParser_k_escape_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_escape_return;

typedef struct OracleSQLParser_k_exclude_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_exclude_return;

typedef struct OracleSQLParser_k_extract_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_extract_return;

typedef struct OracleSQLParser_k_first_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_first_return;

typedef struct OracleSQLParser_k_following_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_following_return;

typedef struct OracleSQLParser_k_full_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_full_return;

typedef struct OracleSQLParser_k_grouping_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_grouping_return;

typedef struct OracleSQLParser_k_hour_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_hour_return;

typedef struct OracleSQLParser_k_ignore_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_ignore_return;

typedef struct OracleSQLParser_k_include_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_include_return;

typedef struct OracleSQLParser_k_infinite_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_infinite_return;

typedef struct OracleSQLParser_k_inner_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_inner_return;

typedef struct OracleSQLParser_k_int_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_int_return;

typedef struct OracleSQLParser_k_interval_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_interval_return;

typedef struct OracleSQLParser_k_iterate_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_iterate_return;

typedef struct OracleSQLParser_k_join_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_join_return;

typedef struct OracleSQLParser_k_keep_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_keep_return;

typedef struct OracleSQLParser_k_last_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_last_return;

typedef struct OracleSQLParser_k_leading_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_leading_return;

typedef struct OracleSQLParser_k_left_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_left_return;

typedef struct OracleSQLParser_k_like2_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_like2_return;

typedef struct OracleSQLParser_k_like4_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_like4_return;

typedef struct OracleSQLParser_k_likec_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_likec_return;

typedef struct OracleSQLParser_k_limit_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_limit_return;

typedef struct OracleSQLParser_k_listagg_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_listagg_return;

typedef struct OracleSQLParser_k_lnnvl_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_lnnvl_return;

typedef struct OracleSQLParser_k_local_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_local_return;

typedef struct OracleSQLParser_k_locked_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_locked_return;

typedef struct OracleSQLParser_k_log_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_log_return;

typedef struct OracleSQLParser_k_main_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_main_return;

typedef struct OracleSQLParser_k_matched_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_matched_return;

typedef struct OracleSQLParser_k_maxvalue_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_maxvalue_return;

typedef struct OracleSQLParser_k_measures_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_measures_return;

typedef struct OracleSQLParser_k_member_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_member_return;

typedef struct OracleSQLParser_k_merge_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_merge_return;

typedef struct OracleSQLParser_k_minute_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_minute_return;

typedef struct OracleSQLParser_k_mivalue_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_mivalue_return;

typedef struct OracleSQLParser_k_mlslabel_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_mlslabel_return;

typedef struct OracleSQLParser_k_model_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_model_return;

typedef struct OracleSQLParser_k_month_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_month_return;

typedef struct OracleSQLParser_k_multiset_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_multiset_return;

typedef struct OracleSQLParser_k_nan_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_nan_return;

typedef struct OracleSQLParser_k_national_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_national_return;

typedef struct OracleSQLParser_k_natural_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_natural_return;

typedef struct OracleSQLParser_k_nav_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_nav_return;

typedef struct OracleSQLParser_k_nchar_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_nchar_return;

typedef struct OracleSQLParser_k_nclob_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_nclob_return;

typedef struct OracleSQLParser_k_nocycle_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_nocycle_return;

typedef struct OracleSQLParser_k_nulls_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_nulls_return;

typedef struct OracleSQLParser_k_numeric_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_numeric_return;

typedef struct OracleSQLParser_k_nvarchar_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_nvarchar_return;

typedef struct OracleSQLParser_k_nvarchar2_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_nvarchar2_return;

typedef struct OracleSQLParser_k_only_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_only_return;

typedef struct OracleSQLParser_k_outer_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_outer_return;

typedef struct OracleSQLParser_k_over_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_over_return;

typedef struct OracleSQLParser_k_partition_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_partition_return;

typedef struct OracleSQLParser_k_percent_rank_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_percent_rank_return;

typedef struct OracleSQLParser_k_percentile_cont_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_percentile_cont_return;

typedef struct OracleSQLParser_k_percentile_disc_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_percentile_disc_return;

typedef struct OracleSQLParser_k_pivot_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_pivot_return;

typedef struct OracleSQLParser_k_pls_integer_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_pls_integer_return;

typedef struct OracleSQLParser_k_positive_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_positive_return;

typedef struct OracleSQLParser_k_preceding_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_preceding_return;

typedef struct OracleSQLParser_k_precision_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_precision_return;

typedef struct OracleSQLParser_k_present_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_present_return;

typedef struct OracleSQLParser_k_range_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_range_return;

typedef struct OracleSQLParser_k_read_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_read_return;

typedef struct OracleSQLParser_k_real_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_real_return;

typedef struct OracleSQLParser_k_reference_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_reference_return;

typedef struct OracleSQLParser_k_regexp_like_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_regexp_like_return;

typedef struct OracleSQLParser_k_reject_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_reject_return;

typedef struct OracleSQLParser_k_respect_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_respect_return;

typedef struct OracleSQLParser_k_return_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_return_return;

typedef struct OracleSQLParser_k_returning_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_returning_return;

typedef struct OracleSQLParser_k_right_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_right_return;

typedef struct OracleSQLParser_k_rollup_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_rollup_return;

typedef struct OracleSQLParser_k_rules_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_rules_return;

typedef struct OracleSQLParser_k_sample_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_sample_return;

typedef struct OracleSQLParser_k_scn_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_scn_return;

typedef struct OracleSQLParser_k_search_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_search_return;

typedef struct OracleSQLParser_k_second_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_second_return;

typedef struct OracleSQLParser_k_seed_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_seed_return;

typedef struct OracleSQLParser_k_sequential_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_sequential_return;

typedef struct OracleSQLParser_k_sessiontimezone_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_sessiontimezone_return;

typedef struct OracleSQLParser_k_sets_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_sets_return;

typedef struct OracleSQLParser_k_siblings_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_siblings_return;

typedef struct OracleSQLParser_k_single_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_single_return;

typedef struct OracleSQLParser_k_skip_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_skip_return;

typedef struct OracleSQLParser_k_some_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_some_return;

typedef struct OracleSQLParser_k_sql_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_sql_return;

typedef struct OracleSQLParser_k_submultiset_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_submultiset_return;

typedef struct OracleSQLParser_k_subpartition_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_subpartition_return;

typedef struct OracleSQLParser_k_the_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_the_return;

typedef struct OracleSQLParser_k_time_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_time_return;

typedef struct OracleSQLParser_k_timestamp_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_timestamp_return;

typedef struct OracleSQLParser_k_timezone_hour_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_timezone_hour_return;

typedef struct OracleSQLParser_k_timezone_minute_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_timezone_minute_return;

typedef struct OracleSQLParser_k_timezone_region_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_timezone_region_return;

typedef struct OracleSQLParser_k_timezone_abbr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_timezone_abbr_return;

typedef struct OracleSQLParser_k_to_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_to_return;

typedef struct OracleSQLParser_k_trailing_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_trailing_return;

typedef struct OracleSQLParser_k_trim_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_trim_return;

typedef struct OracleSQLParser_k_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_type_return;

typedef struct OracleSQLParser_k_unbounded_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_unbounded_return;

typedef struct OracleSQLParser_k_under_path_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_under_path_return;

typedef struct OracleSQLParser_k_unlimited_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_unlimited_return;

typedef struct OracleSQLParser_k_unpivot_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_unpivot_return;

typedef struct OracleSQLParser_k_until_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_until_return;

typedef struct OracleSQLParser_k_updated_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_updated_return;

typedef struct OracleSQLParser_k_upsert_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_upsert_return;

typedef struct OracleSQLParser_k_urowid_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_urowid_return;

typedef struct OracleSQLParser_k_using_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_using_return;

typedef struct OracleSQLParser_k_value_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_value_return;

typedef struct OracleSQLParser_k_varying_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_varying_return;

typedef struct OracleSQLParser_k_versions_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_versions_return;

typedef struct OracleSQLParser_k_wait_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_wait_return;

typedef struct OracleSQLParser_k_when_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_when_return;

typedef struct OracleSQLParser_k_within_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_within_return;

typedef struct OracleSQLParser_k_xml_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_xml_return;

typedef struct OracleSQLParser_k_year_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_year_return;

typedef struct OracleSQLParser_k_zone_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_k_zone_return;

typedef struct OracleSQLParser_keyword_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_keyword_return;

typedef struct OracleSQLParser_quoted_string_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_quoted_string_return;

typedef struct OracleSQLParser_doublevertbar_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_doublevertbar_return;

typedef struct OracleSQLParser_not_equal_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_not_equal_return;

typedef struct OracleSQLParser_leq_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_leq_return;

typedef struct OracleSQLParser_geq_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    OracleSQLParser_geq_return;



/** Context tracking structure for OracleSQLParser
 */
struct OracleSQLParser_Ctx_struct
{
    /** Built in ANTLR3 context tracker contains all the generic elements
     *  required for context tracking.
     */
    pANTLR3_PARSER   pParser;


     OracleSQLParser_start_rule_return (*start_rule)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_delete_statement_return (*delete_statement)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_merge_statement_return (*merge_statement)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_merge_update_clause_return (*merge_update_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_merge_insert_clause_return (*merge_insert_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_insert_statement_return (*insert_statement)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_single_table_insert_return (*single_table_insert)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_insert_into_clause_return (*insert_into_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_values_clause_return (*values_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_returning_clause_return (*returning_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_multi_table_insert_return (*multi_table_insert)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_conditional_insert_clause_return (*conditional_insert_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_dml_table_expression_clause_return (*dml_table_expression_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_error_logging_clause_return (*error_logging_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_data_item_return (*data_item)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_update_statement_return (*update_statement)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_update_set_clause_return (*update_set_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_update_set_clause_part1_return (*update_set_clause_part1)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_update_set_clause_part2_return (*update_set_clause_part2)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_select_statement_return (*select_statement)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_subquery_factoring_clause_return (*subquery_factoring_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_subquery_factoring_clause_part_first_return (*subquery_factoring_clause_part_first)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_subquery_factoring_clause_part_next_return (*subquery_factoring_clause_part_next)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_search_clause_return (*search_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_cycle_clause_return (*cycle_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_select_list_return (*select_list)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_displayed_column_part_first_return (*displayed_column_part_first)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_displayed_column_part_next_return (*displayed_column_part_next)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_displayed_column_return (*displayed_column)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_sql_expression_return (*sql_expression)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_expr_add_return (*expr_add)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_expr_mul_return (*expr_mul)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_expr_sign_return (*expr_sign)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_expr_expr_return (*expr_expr)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_expr_paren_return (*expr_paren)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_nested_expression_return (*nested_expression)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_function_expression_return (*function_expression)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_call_parameters_return (*call_parameters)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_call_parameter_return (*call_parameter)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_parameter_name_return (*parameter_name)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_special_function_return (*special_function)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_case_expression_return (*case_expression)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_cursor_expression_return (*cursor_expression)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_simple_case_expression_return (*simple_case_expression)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_searched_case_expression_return (*searched_case_expression)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_else_case_expression_return (*else_case_expression)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_object_access_expression_return (*object_access_expression)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_simple_expression_return (*simple_expression)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_query_block_return (*query_block)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_subquery_return (*subquery)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_timestamp_expression_return (*timestamp_expression)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_interval_x_to_y_return (*interval_x_to_y)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_precision_return (*precision)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_extract_datetime_expression_return (*extract_datetime_expression)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_datetime_expression_return (*datetime_expression)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_interval_expression_return (*interval_expression)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_special_expression_return (*special_expression)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_cluster_set_clause_return (*cluster_set_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_cast_expression_return (*cast_expression)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_datatype_name_return (*datatype_name)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_boolean_literal_return (*boolean_literal)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_t_alias_return (*t_alias)	(struct OracleSQLParser_Ctx_struct * ctx, int aliasUsage);
     OracleSQLParser_c_alias_return (*c_alias)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_column_spec_return (*column_spec)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_pseudo_column_return (*pseudo_column)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_function_name_return (*function_name)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_function_spec_return (*function_spec)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_identifier_return (*identifier)	(struct OracleSQLParser_Ctx_struct * ctx, int identifierClass, int usageType);
     OracleSQLParser_bind_variable_return (*bind_variable)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_sql_identifier_return (*sql_identifier)	(struct OracleSQLParser_Ctx_struct * ctx, int identifierClass, int usageType);
     OracleSQLParser_table_reference_list_return (*table_reference_list)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_table_reference_return (*table_reference)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_query_table_expression_return (*query_table_expression)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_flashback_query_clause_return (*flashback_query_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_sample_clause_return (*sample_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_partition_extension_clause_return (*partition_extension_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_subquery_restricrion_clause_return (*subquery_restricrion_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_table_collection_clause_return (*table_collection_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_join_clause_return (*join_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_inner_cross_join_clause_return (*inner_cross_join_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_outer_join_clause_return (*outer_join_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_query_partition_clause_return (*query_partition_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_outer_join_type_return (*outer_join_type)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_joining_clause_return (*joining_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_sample_percent_return (*sample_percent)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_seed_value_return (*seed_value)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_outer_join_sign_return (*outer_join_sign)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_table_name_long_return (*table_name_long)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_table_name_return (*table_name)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_schema_name_return (*schema_name)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_package_name_return (*package_name)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_dblink_name_return (*dblink_name)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_column_specs_return (*column_specs)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_partition_return (*partition)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_partition_key_value_return (*partition_key_value)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_subpartition_key_value_return (*subpartition_key_value)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_constraint_return (*constraint)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_collection_expression_return (*collection_expression)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_where_clause_return (*where_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_hierarchical_query_clause_return (*hierarchical_query_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_group_by_clause_return (*group_by_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_group_by_exprs_return (*group_by_exprs)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_group_by_expr_return (*group_by_expr)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_rollup_cube_clause_return (*rollup_cube_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_grouping_sets_clause_return (*grouping_sets_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_grouping_sets_exprs_return (*grouping_sets_exprs)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_grouping_sets_expr_return (*grouping_sets_expr)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_sql_condition_return (*sql_condition)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_or_return (*condition_or)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_and_return (*condition_and)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_not_return (*condition_not)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_expr_return (*condition_expr)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_exists_return (*condition_exists)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_is_return (*condition_is)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_comparison_return (*condition_comparison)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_group_comparison_return (*condition_group_comparison)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_in_return (*condition_in)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_is_a_set_return (*condition_is_a_set)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_is_any_return (*condition_is_any)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_is_empty_return (*condition_is_empty)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_is_of_type_return (*condition_is_of_type)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_is_present_return (*condition_is_present)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_like_return (*condition_like)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_memeber_return (*condition_memeber)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_between_return (*condition_between)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_regexp_like_return (*condition_regexp_like)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_submultiset_return (*condition_submultiset)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_equals_path_return (*condition_equals_path)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_under_path_return (*condition_under_path)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_levels_return (*levels)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_correlation_integer_return (*correlation_integer)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_path_string_return (*path_string)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_type_names_return (*type_names)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_integer_return (*integer)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_column_name_return (*column_name)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_nested_table_return (*nested_table)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_nested_table_column_name_return (*nested_table_column_name)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_sql_expressions_return (*sql_expressions)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_grouping_sets_expression_list_return (*grouping_sets_expression_list)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_grouping_expression_list_return (*grouping_expression_list)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_expression_list_return (*expression_list)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_cell_reference_return (*cell_reference)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_condition_paren_return (*condition_paren)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_model_clause_return (*model_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_cell_reference_options_return (*cell_reference_options)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_return_rows_clause_return (*return_rows_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_reference_model_return (*reference_model)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_reference_model_name_return (*reference_model_name)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_main_model_return (*main_model)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_main_model_name_return (*main_model_name)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_model_column_clauses_return (*model_column_clauses)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_model_columns_return (*model_columns)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_model_column_return (*model_column)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_model_rules_clause_return (*model_rules_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_model_rules_exprs_return (*model_rules_exprs)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_model_rules_expr_return (*model_rules_expr)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_cell_assignment_return (*cell_assignment)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_cell_assignment_exprs_return (*cell_assignment_exprs)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_cell_assignment_expr_return (*cell_assignment_expr)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_measure_column_return (*measure_column)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_single_column_for_loop_return (*single_column_for_loop)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_pattern_return (*pattern)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_literal_return (*literal)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_literals_return (*literals)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_multi_column_for_loop_return (*multi_column_for_loop)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_bracket_literals_return (*bracket_literals)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_bracket_literals_list_return (*bracket_literals_list)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_union_clause_return (*union_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_order_by_clause_return (*order_by_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_order_by_clause_part_first_return (*order_by_clause_part_first)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_order_by_clause_part_next_return (*order_by_clause_part_next)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_analytic_function_name_return (*analytic_function_name)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_analytic_function_call_return (*analytic_function_call)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_analytic_function_return (*analytic_function)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_count_function_return (*count_function)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_analytic_clause_return (*analytic_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_windowing_clause_part_return (*windowing_clause_part)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_windowing_clause_return (*windowing_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_aggregate_function_name_return (*aggregate_function_name)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_aggregate_function_return (*aggregate_function)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_percent_rank_aggregate_return (*percent_rank_aggregate)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_dense_rank_aggregate_return (*dense_rank_aggregate)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_percent_rank_analytic_return (*percent_rank_analytic)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_percent_cont_disc_analytic_return (*percent_cont_disc_analytic)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_dense_rank_analytic_return (*dense_rank_analytic)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_first_last_return (*first_last)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_listagg_return (*listagg)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_for_update_clause_return (*for_update_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_for_update_clause_part_first_return (*for_update_clause_part_first)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_for_update_clause_part_next_return (*for_update_clause_part_next)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_pivot_clause_return (*pivot_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_pivot_for_clause_return (*pivot_for_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_pivot_in_clause_return (*pivot_in_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_unpivot_clause_return (*unpivot_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_unpivot_in_clause_return (*unpivot_in_clause)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_constant_return (*constant)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_access_return (*r_access)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_add_return (*r_add)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_all_return (*r_all)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_alter_return (*r_alter)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_and_return (*r_and)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_any_return (*r_any)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_arraylen_return (*r_arraylen)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_as_return (*r_as)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_asc_return (*r_asc)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_audit_return (*r_audit)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_between_return (*r_between)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_by_return (*r_by)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_case_return (*r_case)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_char_return (*r_char)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_check_return (*r_check)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_cluster_return (*r_cluster)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_column_return (*r_column)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_comment_return (*r_comment)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_compress_return (*r_compress)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_connect_return (*r_connect)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_create_return (*r_create)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_current_return (*r_current)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_date_return (*r_date)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_decimal_return (*r_decimal)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_default_return (*r_default)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_delete_return (*r_delete)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_desc_return (*r_desc)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_distinct_return (*r_distinct)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_drop_return (*r_drop)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_else_return (*r_else)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_exclusive_return (*r_exclusive)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_exists_return (*r_exists)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_false_return (*r_false)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_file_return (*r_file)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_float_return (*r_float)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_for_return (*r_for)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_from_return (*r_from)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_grant_return (*r_grant)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_group_return (*r_group)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_having_return (*r_having)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_identified_return (*r_identified)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_immediate_return (*r_immediate)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_in_return (*r_in)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_increment_return (*r_increment)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_index_return (*r_index)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_initial_return (*r_initial)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_insert_return (*r_insert)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_integer_return (*r_integer)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_intersect_return (*r_intersect)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_into_return (*r_into)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_is_return (*r_is)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_level_return (*r_level)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_like_return (*r_like)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_lock_return (*r_lock)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_long_return (*r_long)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_maxextents_return (*r_maxextents)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_minus_return (*r_minus)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_mode_return (*r_mode)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_modify_return (*r_modify)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_noaudit_return (*r_noaudit)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_nocompress_return (*r_nocompress)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_not_return (*r_not)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_notfound_return (*r_notfound)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_nowait_return (*r_nowait)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_null_return (*r_null)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_number_return (*r_number)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_of_return (*r_of)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_offline_return (*r_offline)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_on_return (*r_on)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_online_return (*r_online)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_option_return (*r_option)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_or_return (*r_or)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_order_return (*r_order)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_pctfree_return (*r_pctfree)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_prior_return (*r_prior)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_privileges_return (*r_privileges)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_public_return (*r_public)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_raw_return (*r_raw)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_rename_return (*r_rename)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_resource_return (*r_resource)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_revoke_return (*r_revoke)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_row_return (*r_row)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_rowid_return (*r_rowid)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_rowlabel_return (*r_rowlabel)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_rownum_return (*r_rownum)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_rows_return (*r_rows)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_select_return (*r_select)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_session_return (*r_session)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_set_return (*r_set)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_share_return (*r_share)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_size_return (*r_size)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_smallint_return (*r_smallint)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_sqlbuf_return (*r_sqlbuf)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_start_return (*r_start)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_successful_return (*r_successful)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_synonym_return (*r_synonym)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_sysdate_return (*r_sysdate)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_table_return (*r_table)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_then_return (*r_then)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_to_return (*r_to)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_trigger_return (*r_trigger)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_true_return (*r_true)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_uid_return (*r_uid)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_union_return (*r_union)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_unique_return (*r_unique)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_update_return (*r_update)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_user_return (*r_user)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_validate_return (*r_validate)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_values_return (*r_values)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_varchar_return (*r_varchar)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_varchar2_return (*r_varchar2)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_view_return (*r_view)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_whenever_return (*r_whenever)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_where_return (*r_where)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_r_with_return (*r_with)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_a_return (*k_a)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_at_return (*k_at)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_automatic_return (*k_automatic)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_bfile_return (*k_bfile)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_binary_double_return (*k_binary_double)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_binary_float_return (*k_binary_float)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_binary_integer_return (*k_binary_integer)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_blob_return (*k_blob)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_block_return (*k_block)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_boolean_return (*k_boolean)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_both_return (*k_both)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_breadth_return (*k_breadth)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_byte_return (*k_byte)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_cast_return (*k_cast)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_character_return (*k_character)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_clob_return (*k_clob)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_cluster_set_return (*k_cluster_set)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_connect_by_root_return (*k_connect_by_root)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_constraint_return (*k_constraint)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_count_return (*k_count)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_cross_return (*k_cross)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_cube_return (*k_cube)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_cursor_return (*k_cursor)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_cycle_return (*k_cycle)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_day_return (*k_day)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_dbtimezone_return (*k_dbtimezone)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_dec_return (*k_dec)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_decrement_return (*k_decrement)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_dense_rank_return (*k_dense_rank)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_depth_return (*k_depth)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_dimension_return (*k_dimension)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_double_return (*k_double)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_empty_return (*k_empty)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_end_return (*k_end)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_equals_path_return (*k_equals_path)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_errors_return (*k_errors)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_escape_return (*k_escape)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_exclude_return (*k_exclude)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_extract_return (*k_extract)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_first_return (*k_first)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_following_return (*k_following)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_full_return (*k_full)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_grouping_return (*k_grouping)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_hour_return (*k_hour)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_ignore_return (*k_ignore)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_include_return (*k_include)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_infinite_return (*k_infinite)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_inner_return (*k_inner)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_int_return (*k_int)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_interval_return (*k_interval)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_iterate_return (*k_iterate)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_join_return (*k_join)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_keep_return (*k_keep)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_last_return (*k_last)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_leading_return (*k_leading)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_left_return (*k_left)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_like2_return (*k_like2)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_like4_return (*k_like4)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_likec_return (*k_likec)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_limit_return (*k_limit)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_listagg_return (*k_listagg)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_lnnvl_return (*k_lnnvl)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_local_return (*k_local)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_locked_return (*k_locked)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_log_return (*k_log)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_main_return (*k_main)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_matched_return (*k_matched)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_maxvalue_return (*k_maxvalue)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_measures_return (*k_measures)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_member_return (*k_member)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_merge_return (*k_merge)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_minute_return (*k_minute)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_mivalue_return (*k_mivalue)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_mlslabel_return (*k_mlslabel)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_model_return (*k_model)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_month_return (*k_month)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_multiset_return (*k_multiset)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_nan_return (*k_nan)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_national_return (*k_national)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_natural_return (*k_natural)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_nav_return (*k_nav)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_nchar_return (*k_nchar)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_nclob_return (*k_nclob)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_nocycle_return (*k_nocycle)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_nulls_return (*k_nulls)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_numeric_return (*k_numeric)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_nvarchar_return (*k_nvarchar)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_nvarchar2_return (*k_nvarchar2)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_only_return (*k_only)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_outer_return (*k_outer)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_over_return (*k_over)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_partition_return (*k_partition)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_percent_rank_return (*k_percent_rank)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_percentile_cont_return (*k_percentile_cont)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_percentile_disc_return (*k_percentile_disc)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_pivot_return (*k_pivot)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_pls_integer_return (*k_pls_integer)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_positive_return (*k_positive)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_preceding_return (*k_preceding)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_precision_return (*k_precision)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_present_return (*k_present)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_range_return (*k_range)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_read_return (*k_read)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_real_return (*k_real)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_reference_return (*k_reference)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_regexp_like_return (*k_regexp_like)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_reject_return (*k_reject)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_respect_return (*k_respect)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_return_return (*k_return)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_returning_return (*k_returning)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_right_return (*k_right)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_rollup_return (*k_rollup)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_rules_return (*k_rules)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_sample_return (*k_sample)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_scn_return (*k_scn)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_search_return (*k_search)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_second_return (*k_second)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_seed_return (*k_seed)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_sequential_return (*k_sequential)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_sessiontimezone_return (*k_sessiontimezone)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_sets_return (*k_sets)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_siblings_return (*k_siblings)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_single_return (*k_single)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_skip_return (*k_skip)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_some_return (*k_some)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_sql_return (*k_sql)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_submultiset_return (*k_submultiset)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_subpartition_return (*k_subpartition)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_the_return (*k_the)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_time_return (*k_time)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_timestamp_return (*k_timestamp)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_timezone_hour_return (*k_timezone_hour)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_timezone_minute_return (*k_timezone_minute)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_timezone_region_return (*k_timezone_region)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_timezone_abbr_return (*k_timezone_abbr)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_to_return (*k_to)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_trailing_return (*k_trailing)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_trim_return (*k_trim)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_type_return (*k_type)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_unbounded_return (*k_unbounded)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_under_path_return (*k_under_path)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_unlimited_return (*k_unlimited)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_unpivot_return (*k_unpivot)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_until_return (*k_until)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_updated_return (*k_updated)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_upsert_return (*k_upsert)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_urowid_return (*k_urowid)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_using_return (*k_using)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_value_return (*k_value)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_varying_return (*k_varying)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_versions_return (*k_versions)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_wait_return (*k_wait)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_when_return (*k_when)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_within_return (*k_within)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_xml_return (*k_xml)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_year_return (*k_year)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_k_zone_return (*k_zone)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_keyword_return (*keyword)	(struct OracleSQLParser_Ctx_struct * ctx, int identifierClass, int usageType);
     OracleSQLParser_quoted_string_return (*quoted_string)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_doublevertbar_return (*doublevertbar)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_not_equal_return (*not_equal)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_leq_return (*leq)	(struct OracleSQLParser_Ctx_struct * ctx);
     OracleSQLParser_geq_return (*geq)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred8_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred15_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred17_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred33_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred35_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred54_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred58_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred59_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred60_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred62_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred63_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred73_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred79_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred87_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred88_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred89_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred92_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred93_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred94_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred95_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred96_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred103_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred121_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred123_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred128_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred129_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred130_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred131_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred132_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred133_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred134_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred135_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred136_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred137_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred138_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred139_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred140_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred141_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred142_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred144_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred145_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred150_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred151_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred152_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred155_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred157_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred162_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred163_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred170_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred171_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred182_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred183_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred186_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred187_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred188_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred189_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred190_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred191_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred192_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred195_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred196_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred197_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred198_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred199_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred202_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred203_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred204_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred206_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred208_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred209_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred210_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred212_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred213_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred214_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred215_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred216_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred219_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred220_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred221_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred222_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred223_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred224_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred225_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred226_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred227_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred230_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred231_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred232_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred233_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred240_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred247_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred248_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred249_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred250_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred251_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred252_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred254_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred258_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred264_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred268_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred270_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred275_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred277_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred281_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred282_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred304_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred307_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred309_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred311_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred315_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred316_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred317_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred318_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred321_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred322_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred323_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred331_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred344_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred345_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred346_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred347_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred348_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred349_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred350_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred352_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred353_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred354_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred356_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred357_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred358_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred359_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred363_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred364_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred365_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred367_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred368_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred373_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred380_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred382_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred383_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred384_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred385_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred386_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred388_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred389_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred390_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred395_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred396_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred410_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred411_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred413_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred414_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred415_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred416_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred417_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred418_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred419_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred420_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred423_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred424_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred425_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred427_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred428_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred429_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred430_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred431_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred432_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred433_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred434_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred435_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred436_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred437_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred438_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred439_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred440_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred441_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred442_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred443_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred444_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred449_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred455_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred456_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred457_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred464_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred465_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred466_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred470_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred471_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred479_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred481_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred482_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred484_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred485_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred496_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred499_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred506_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred508_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred511_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred512_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred514_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred515_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred516_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred517_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred518_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred520_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred521_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred522_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred523_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred524_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred539_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred551_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred552_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred566_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred568_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred569_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred570_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred571_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred572_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred573_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred574_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred575_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred576_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred584_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred585_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred586_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred587_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred588_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred605_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred606_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred607_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred608_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred609_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred615_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred616_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred618_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred619_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred620_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred622_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred623_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred624_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred625_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred627_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred628_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred629_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred631_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred632_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred633_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred643_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred647_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred648_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred650_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred657_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred662_OracleSQL)	(struct OracleSQLParser_Ctx_struct * ctx);
    // Delegated rules

    const char * (*getGrammarFileName)();
    void            (*reset)  (struct OracleSQLParser_Ctx_struct * ctx);
    void	    (*free)   (struct OracleSQLParser_Ctx_struct * ctx);
    /* @headerFile.members() */
    pANTLR3_BASE_TREE_ADAPTOR	adaptor;
    pANTLR3_VECTOR_FACTORY		vectors;
    /* End @headerFile.members() */
};

// Function protoypes for the constructor functions that external translation units
// such as delegators and delegates may wish to call.
//
ANTLR3_API pOracleSQLParser OracleSQLParserNew         (pANTLR3_COMMON_TOKEN_STREAM instream);
ANTLR3_API pOracleSQLParser OracleSQLParserNewSSD      (pANTLR3_COMMON_TOKEN_STREAM instream, pANTLR3_RECOGNIZER_SHARED_STATE state);

/** Symbolic definitions of all the tokens that the parser will work with.
 * \{
 *
 * Antlr will define EOF, but we can't use that as it it is too common in
 * in C header files and that would be confusing. There is no way to filter this out at the moment
 * so we just undef it here for now. That isn't the value we get back from C recognizers
 * anyway. We are looking for ANTLR3_TOKEN_EOF.
 */
#ifdef	EOF
#undef	EOF
#endif
#ifdef	Tokens
#undef	Tokens
#endif 
#define EOF      -1
#define T__114      114
#define T__115      115
#define T__116      116
#define T__117      117
#define T__118      118
#define T__119      119
#define T__120      120
#define T__121      121
#define T__122      122
#define T__123      123
#define T__124      124
#define T__125      125
#define T__126      126
#define T__127      127
#define T__128      128
#define T__129      129
#define T__130      130
#define T__131      131
#define T__132      132
#define T__133      133
#define T__134      134
#define T__135      135
#define T__136      136
#define T__137      137
#define T__138      138
#define T__139      139
#define T__140      140
#define T__141      141
#define T__142      142
#define T__143      143
#define T__144      144
#define T__145      145
#define T__146      146
#define T__147      147
#define T__148      148
#define T__149      149
#define T__150      150
#define T__151      151
#define T__152      152
#define T__153      153
#define T__154      154
#define T__155      155
#define T__156      156
#define T__157      157
#define T__158      158
#define T__159      159
#define T__160      160
#define T__161      161
#define T__162      162
#define T__163      163
#define T__164      164
#define T__165      165
#define T__166      166
#define T__167      167
#define T__168      168
#define T__169      169
#define T__170      170
#define T__171      171
#define T__172      172
#define T__173      173
#define T__174      174
#define T__175      175
#define T__176      176
#define T__177      177
#define T__178      178
#define T__179      179
#define T__180      180
#define T__181      181
#define T__182      182
#define T__183      183
#define T__184      184
#define T__185      185
#define T__186      186
#define T__187      187
#define T__188      188
#define T__189      189
#define T__190      190
#define T__191      191
#define T__192      192
#define T__193      193
#define T__194      194
#define T__195      195
#define T__196      196
#define T__197      197
#define T__198      198
#define T__199      199
#define T__200      200
#define T__201      201
#define T__202      202
#define T__203      203
#define T__204      204
#define T__205      205
#define T__206      206
#define T__207      207
#define T__208      208
#define T__209      209
#define T__210      210
#define T__211      211
#define T__212      212
#define T__213      213
#define T__214      214
#define T__215      215
#define T__216      216
#define T__217      217
#define T__218      218
#define T__219      219
#define T__220      220
#define T__221      221
#define T__222      222
#define T__223      223
#define T__224      224
#define T__225      225
#define T__226      226
#define T__227      227
#define T__228      228
#define T__229      229
#define T__230      230
#define T__231      231
#define T__232      232
#define T__233      233
#define T__234      234
#define T__235      235
#define T__236      236
#define T__237      237
#define T__238      238
#define T__239      239
#define T__240      240
#define T__241      241
#define T__242      242
#define T__243      243
#define T__244      244
#define T__245      245
#define T__246      246
#define T__247      247
#define T__248      248
#define T__249      249
#define T__250      250
#define T__251      251
#define T__252      252
#define T__253      253
#define T__254      254
#define T__255      255
#define T__256      256
#define T__257      257
#define T__258      258
#define T__259      259
#define T__260      260
#define T__261      261
#define T__262      262
#define T__263      263
#define T__264      264
#define T__265      265
#define T__266      266
#define T__267      267
#define T__268      268
#define T__269      269
#define T__270      270
#define T__271      271
#define T__272      272
#define T__273      273
#define T__274      274
#define T__275      275
#define T__276      276
#define T__277      277
#define T__278      278
#define T__279      279
#define T__280      280
#define T__281      281
#define T__282      282
#define T__283      283
#define T__284      284
#define T__285      285
#define T_UNKNOWN      4
#define T_RESERVED      5
#define T_TABLE_ALIAS      6
#define T_COLUMN_ALIAS      7
#define T_COLUMN_NAME      8
#define T_TABLE_NAME      9
#define T_SCHEMA_NAME      10
#define T_FUNCTION_NAME      11
#define T_PACKAGE_NAME      12
#define T_DBLINK_NAME      13
#define T_BINDVAR_NAME      14
#define T_DECL      15
#define T_USE      16
#define T_IDENTIFIER      17
#define T_TABLE_REF      18
#define T_WITH      19
#define T_SELECT      20
#define T_SUBQUERY      21
#define T_TABLE_CAST      22
#define T_COLUMN_LIST      23
#define T_SELECT_COLUMN      24
#define T_FROM      25
#define T_WHERE      26
#define T_HIERARCHICAL      27
#define T_GROUP_BY      28
#define T_MODEL      29
#define T_UNION      30
#define T_ORDER_BY_CLAUSE      31
#define T_FOR_UPDATE_CLAUSE      32
#define T_JOINING_CLAUSE      33
#define T_OPERATOR_UNARY      34
#define T_OPERATOR_BINARY      35
#define T_OPERATOR_PART      36
#define T_COND_OR      37
#define T_COND_OR_SEQ      38
#define T_COND_AND      39
#define T_COND_AND_SEQ      40
#define T_COND_NOT      41
#define T_COND_EXISTS      42
#define T_COND_IS      43
#define T_COND_COMPARISON      44
#define T_COND_GROUP_COMPARISON      45
#define T_COND_IN      46
#define T_COND_IS_A_SET      47
#define T_COND_IS_ANY      48
#define T_COND_IS_EMPTY      49
#define T_COND_IS_OF_TYPE      50
#define T_COND_IS_PRESENT      51
#define T_COND_LIKE      52
#define T_COND_MEMEBER      53
#define T_COND_BETWEEN      54
#define T_COND_REGEXP_LIKE      55
#define T_COND_SUBMULTISET      56
#define T_COND_EQUALS_PATH      57
#define T_COND_UNDER_PATH      58
#define T_COND_PAREN      59
#define SEMI      60
#define LPAREN      61
#define RPAREN      62
#define EQ      63
#define COMMA      64
#define AT_SIGN      65
#define NUMBER      66
#define ASTERISK      67
#define DOT      68
#define PLUS      69
#define MINUS      70
#define DIVIDE      71
#define ARROW      72
#define QUOTED_STRING      73
#define FOUND_ATTR      74
#define NOTFOUND_ATTR      75
#define ISOPEN_ATTR      76
#define ROWCOUNT_ATTR      77
#define BULK_ROWCOUNT_ATTR      78
#define CHARSET_ATTR      79
#define ID      80
#define BINDVAR      81
#define COLON      82
#define GTH      83
#define LTH      84
#define LBRACK      85
#define RBRACK      86
#define QSTRING      87
#define QS_ANGLE      88
#define QS_BRACE      89
#define QS_BRACK      90
#define QS_PAREN      91
#define QS_OTHER      92
#define QUOTE      93
#define QS_OTHER_CH      94
#define DOUBLEQUOTED_STRING      95
#define NUM      96
#define POINT      97
#define DOUBLEDOT      98
#define PERCENTAGE      99
#define LLABEL      100
#define RLABEL      101
#define ASSIGN      102
#define VERTBAR      103
#define DOUBLEVERTBAR      104
#define NOT_EQ      105
#define LEQ      106
#define GEQ      107
#define WS      108
#define SL_COMMENT      109
#define ML_COMMENT      110
#define TYPE_ATTR      111
#define ROWTYPE_ATTR      112
#define ZV      113
#ifdef	EOF
#undef	EOF
#define	EOF	ANTLR3_TOKEN_EOF
#endif

#ifndef TOKENSOURCE
#define TOKENSOURCE(lxr) lxr->pLexer->rec->state->tokSource
#endif

/* End of token definitions for OracleSQLParser
 * =============================================================================
 */
/** \} */

#ifdef __cplusplus
}
#endif

#endif

/* END - Note:Keep extra line feed to satisfy UNIX systems */
